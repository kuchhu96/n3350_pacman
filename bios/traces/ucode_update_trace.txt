wrmsr_xlat:
[   147] U0c80:  MOVE_DSZ32() 
[     0] U0c81: LFNCEMARK-> tmp8:= MOVEINSERTFLGS_DSZ64(0x00000030, rcx) !m1 
[   148] U0c82:  tmp5:= CONCAT_DSZ32(rdx, rax) 
[   148] U0c84:  NOP 
[     0] U0c85:  NOP 
[   149] U0c86:  tmp1:= TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW SAVEUIP0 U0c88? SEQW GOTO U677d
[   149] U0c88:  tmp2:= AND_DSZ32(0xc0000f80, rcx) 
[     0] U0c89:  tmp2:= SUB_DSZ32(0x00000800, tmp2) 
[   150] U00f8:  tmp14:= SAVEUIP(0x01, U4055) !m0 SEQW GOTO U0861
[     0] U00f9:  tmp2:= SUB_DSZN(0x000006e0, rcx) !m1 
[   150] U0c8a:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U00fd) SEQW GOTO U00f9
[   151] U00fa:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U00fd) 
[   171] U0ae4:  tmp10:= NOTAND_DSZ32(0x0001c000, tmp8) 
[     0] U0ae5:  tmp10:= MSR2CR( , tmp10) 
[   171] U3cf2:  tmp14:= AND_DSZ32(0x000003fc, tmp14) 
[   171] U3cf4:  tmp14:= OR_DSZ32(0x00523000, tmp14) 
[     0] U3cf5: SYNCWTMRK-> UFLOWCTRL(tmp2, tmp14, URET1) 
[     0] U00fd:  tmp10:= OR_DSZ32(0x00004000, tmp8) 
[   172] U00fe:  tmp10:= NOTAND_DSZ32(0x00018000, tmp10) SEQW GOTO U0ae5
[   172] U0ae6:  SAVEUIP( , 0x00, U0686) SEQW GOTO U3ce1
[     0] U3ce1:  tmp13:= SHR_DSZ32(tmp10, 0x00000003) 
[   172] U3ce2:  tmp13:= AND_DSZ32(0x00000078, tmp13) 
[   172] U3ce4:  tmp13:= OR_DSZ32(0x00523700, tmp13) 
[     0] U3ce5:  tmp14:= SELECTCC_DSZ32_CONDB(tmp8, 0x00000080) 
[   172] U3cf6:  tmp2:= AND_DSZ32(0x3ffff000, tmp8) 
[   172] U3cf8: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) 
[     0] U3cf9:  tmp10:= SHR_DSZ32(tmp10, 0x0000000a) 
[   173] U3ce6:  tmp13:= OR_DSZ32(tmp13, tmp14) 
[   173] U3ce8:  tmp2:= AND_DSZ32(0x0000003f, tmp10) 
[     0] U3ce9:  tmp2:= OR_DSZ32(tmp1, tmp2) 
[   173] U3cfa:  tmp12:= OR_DSZ32(0x0000c000, tmp8) 
[   173] U3cfc:  tmp12:= MSR2CR( , tmp12) 
[     0] U3cfd:  tmp2:= OR_DSZ32(0x00014000, tmp8) 
[   174] U3cea:  tmp2:= UFLOWCTRL(tmp2, tmp2, USTATE) 
[   174] U3cec:  UFLOWCTRL(tmp2, tmp13, URET0) 
[     0] U3ced:  tmp1:= AND_DSZ32(0x00000004, tmp10) 
[   174] U3cfe:  tmp2:= MSR2CR( , tmp2) 
[   174] U3d00:  tmp12:= CONCAT_DSZ32(tmp2, tmp12) 
[     0] U3d01:  tmp1:= ZEROEXT_DSZ32(0x00100408) 
[   175] U3cee:  tmp1:= SHL_DSZ64(tmp1, 0x00000021) 
[   175] U3cf0: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp1, 0x752) 
[     0] U3cf1:  tmp14:= SHR_DSZ32(tmp10, 0x00000016) 
[   175] U3d02:  tmp1:= CONCAT_DSZ32(0x90810200, tmp1) 
[   175] U3d04:  tmp3:= READURAM( , 0x0035, 64) 
[     0] U3d05:  tmp3:= AND_DSZ64(tmp1, tmp3) 
[   176] U3d06:  tmp1:= ZEROEXT_DSZ32(0x020b8000) 
[   176] U3d08:  tmp1:= CONCAT_DSZ32(0x003c491c, tmp1) 
[     0] U3d09:  tmp2:= READURAM( , 0x0077, 64) 
[   177] U3d0a:  tmp1:= AND_DSZ64(tmp1, tmp2) 
[   177] U3d0c:  tmp2:= BTR_DSZ64(tmp1, 0x00000023) 
[     0] U3d0d:  TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3d16
[   178] U3d0e:  tmp2:= BTC_DSZ64(tmp1, 0x00000023) 
[   178] U3d10:  tmp1:= READURAM( , 0x0023, 64) 
[     0] U3d11:  tmp1:= AND_DSZ32(0x00000040, tmp1) 
[   179] U3d12:  tmp3:= OR_DSZ64(tmp1, tmp3) 
[   179] U3d14:  TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U3d16
[     0] U3d15:  tmp3:= BTS_DSZ64(tmp3, 0x0000003d) 
[   180] U3d16:  tmp3:= OR_DSZ64(tmp2, tmp3) 
[   180] U3d18:  tmp3:= XOR_DSZ64(0x00020008, tmp3) 
[     0] U3d19:  tmp2:= AND_DSZ32(0x00003fff, tmp10) 
[     0] U0685:  NOP 
[   181] U0686:  URET(0x00) 
[   181] U3d1a:  tmp2:= SHL_DSZ32(tmp2, 0x00000002) SEQW URET0
[   182] U3790:  TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U3780
[     0] U3791:  unk_dff() 
[   198] U3792:  MOVETOCREG_OR_DSZ64( , 0x00000008, 0x63a) 
[     0] U033d:  WRITEURAM(tmp1, 0x005c, 64) 
[   199] U033e:  NOP SEQW GOTO U3780
[   199] U3780:  SAVEUIP( , 0x00, U60d2) 
[     0] U3781:  TESTUSTATE( , UCODE, 0x000c) ? SEQW GOTO U3701
[   199] U3794:  MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0 
[     0] U3795:  tmp1:= READURAM( , 0x005c, 64) 
[   200] U3278: LFNCEMARK-> TESTUSTATE( , SYS, UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U3282
[     0] U3279:  tmp4:= CONCAT_DSZ32(rdx, rax) 
[   200] U3700:  SAVEUIP( , 0x00, U2e2a) 
[     0] U3701: SYNCWAIT-> TESTUSTATE( , UCODE, !0x00e4) !m0 ? SEQW URET1
[   201] U3796:  tmp1:= BTS_DSZ64(tmp1, 0x0000002b) SEQW GOTO U033d
[   203] U327a:  tmp4:= ZEROEXT_DSZ64N(tmp4) !m1 
apply_ucode_patch:
[   205] U327c:  tmp0:= READURAM( , 0x0053, 64) !m2 
[     0] U327d:  tmp0:= NOTAND_DSZ32(0x00000079, tmp0) 
[   211] U327e:  tmp0:= OR_DSZ32(0x00000002, tmp0) SEQW GOTO U2625
[   213] U2624:  MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x06d) !m0 SEQW GOTO U4042
do_apply_ucode_patch:
[     0] U2625:  tmp0:= WRITEURAM(tmp0, 0x0053, 32) !m2 
[   218] U2628:  tmp11:= ZEROEXT_DSZ32(0x00000001) 
[     0] U2629:  BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U27f1) !m1 
[   219] U2626:  tmp0:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 
[   220] U262a:  MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
[   225] U262c:  tmp11:= ZEROEXT_DSZ32(0x00000002) 
[     0] U262d:  tmp2:= TEST_DSZ64(tmp4, tmp4) 
[   227] U262e:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U27f1) 
[   227] U2630:  tmp11:= ZEROEXT_DSZ32(0x00000003) 
[     0] U2631:  tmp0:= ADD_DSZN(0x0000001f, tmp4) !m1 
[   228] U2634:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U27f1) 
[     0] U2635:  tmp14:= SAVEUIP(0x01, U690d) !m0 
[   228] U5b54:  rbx:= ZEROEXT_DSZ32(tmp14) SEQW GOTO U17ec
[     0] U5b55:  tmp13:= LDZX_DSZ32_ASZ32_SC1(tmp4) 
[   229] U2632:  tmp2:= TEST_DSZ64(tmp0, tmp0) 
[   229] U2636: LFNCEWAIT-> TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U5b55
[   466] U5b58:  tmp0:= SUB_DSZ32(0x00000286, tmp13) 
[     0] U5b59:  tmp0:= MOVEMERGEFLGS_DSZ32(0x00000286, tmp0) 
[   470] U5b56:  tmp13:= SHL_DSZ32(tmp13, 0x00000002) 
[   475] U5b5a:  tmp13:= CMOVCC_DSZ32_CONDB(tmp0, tmp13) 
[   481] U5b5c:  tmp0:= SUB_DSZ32(0x0003efc4, tmp13) 
[     0] U5b5d:  tmp0:= MOVEMERGEFLGS_DSZ32(0x0003efc4, tmp0) 
[   487] U5b5e:  tmp13:= CMOVCC_DSZ32_CONDNBE(tmp0, tmp13) 
[   493] U6914:  WRITEURAM(tmp4, 0x008d, 64) !m2 
[     0] U6915:  SAVEUIP( , 0x01, U6019) !m0 
[   494] U5b60:  tmp13:= NOTAND_DSZ32(0x0000003f, tmp13) 
[     0] U5b61:  tmp13:= ADD_DSZ32(0x00000004, tmp13) 
[   496] U690c:  tmp3:= ZEROEXT_DSZ16(tmp4, tmp3) SEQW URET1
[     0] U690d:  tmp11:= ZEROEXT_DSZ32(0x00000004) 
[   498] U6918:  tmp0:= SHR_DSZ64(tmp1, 0x00000030) 
[     0] U6919:  tmp1:= AND_DSZ32(0x00007ffe, tmp1) 
[   500] U691a:  tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
[   503] U5b62:  WRITEURAM(tmp13, 0x008e, 64) !m2 SEQW URET1
[   504] U691c:  tmp0:= BTR_DSZ32(tmp0, tmp1) 
[     0] U691d:  tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x0004) !m2 
[   516] U690e:  tmp3:= ADD_DSZN(tmp13, tmp4) !m1 
FUN_ucode_0006916:
[   516] U6916:  tmp1:= READURAM( , 0x0020, 64) 
[   519] U6912:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U27f1) 
[   524] U6910:  tmp3:= SUB_DSZN(0x00000001, tmp3) !m1 
[     0] U6911:  tmp2:= TEST_DSZ64(tmp3, tmp3) 
[  2480] U691e:  CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U692a) !m1 
[     0] U6929:  tmp0:= NOTAND_DSZ32(tmp3, tmp0) 
[  2498] U692a:  tmp0:= CONCAT_DSZ32(tmp0) 
[     0] U6019:  CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U5ef9) !m2 
[  2501] U601a:  tmp15:= ZEROEXT_DSZ32(0x00006024) 
[  2501] U692c: SYNCMARK-> WRITEURAM(tmp0, 0x0153, 64) !m2 SEQW URET1
[     0] U692d:  tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) !m2 
[  2502] U601e:  tmp0:= READURAM( , 0x0053, 64) !m2 
[  2510] U601c:  tmp15:= CONCAT_DSZ16(0x000000ed, tmp15) 
[     0] U601d:  WRITEURAM(tmp15, 0x0007, 32) !m2 
[  2513] U6022: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0050,  , tmp3) !m2 
[  2514] U6020:  BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U1840) !m0,m2 
[     0] U6021:  tmp3:= ZEROEXT_DSZ32(0x00000002) 
[  2545] U6024:  tmp3:= PORTIN_DSZ32_ASZ16_SC1(0x0050) !m2 
[     0] U6025:  BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U1840) !m2 
[  4710] U1840:  tmp3:= READURAM( , 0x005c, 64) 
[     0] U1841: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000007, U4bf2) !m0 
[  4712] U4bf6:  tmp1:= BT_DSZ64(tmp1, 0x00000002) 
[  4719] U4bf4:  tmp14:= ZEROEXT_DSZ32(0x00001842) 
[     0] U4bf5:  tmp1:= READURAM( , 0x0053, 64) !m2 
[  4724] U4bf8: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, tmp14) 
[     0] U4bf9:  tmp0:= SHL_DSZ32(tmp3, 0x0000000f) 
[     0] U4bf1:  tmp0:= ZEROEXT_DSZ32(0x0002282b) SEQW GOTO U00ed
[  4736] U4bf2:  tmp3:= ZEROEXT_DSZ32(0x00000001) 
[  4736] U4bfe:  tmp0:= SHL_DSZ32(tmp3, 0x00000008) 
[     0] U5c65:  PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmpv1) !m2 
FUN_ucode_0005c66:
[  4738] U5c66:  tmpv0:= BTS_DSZ32(tmpv0, 0x0000001f) 
[  4742] U4bfa:  tmp1:= BTR_DSZ32(tmp1, 0x0000000f) 
[  4743] U4bfc:  tmp1:= OR_DSZ32(tmp0, tmp1) 
[     0] U4bfd:  WRITEURAM(tmp1, 0x0053, 32) 
[  4743] U4c00:  tmp0:= OR_DSZ32(0x00000014, tmp0) 
[     0] U4c01:  SAVEUIP_REGOVR(0x01, U4c02, 0x0010) !m0 SEQW GOTO U5c66
[  4747] U5c68:  PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmpv0) !m2 
[     0] U5c69: SYNCFULL-> tmpv1:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
[  6634] U5c6a:  BTUJNB_DIRECT_NOTTAKEN(tmpv1, 0x0000001f, U1cbe) !m0,m2 SEQW GOTO U5c69
[     0] U1cbd:  TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1cb2
uret1:
[  8327] U1cbe:  URET(0x01) !m0 
[  8614] U4c02:  tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 
[  9902] U4c08:  BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U064c) 
[     0] U4c09: SYNCFULL-> WRMSLOOPCTRFBR(0x00000080) 
[  9975] U4c04:  tmp0:= SUB_DSZ32(tmp0, tmp3) 
[     0] U4c05: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, tmp14) 
[ 10014] U4c0a:  NOP SEQW GOTO U4bfe
[ 10144] U4c06:  tmp0:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
[ 17599] U21a2:  NOP SEQW URET1
[ 17625] U3c8c:  tmp12:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
[     0] U3c8d:  tmp12:= AND_DSZ32(0x00000070, tmp12) 
[     0] U66ad:  tmp7:= OR_DSZ64(0x00000002, tmp7) 
[ 17654] U66ae:  tmp4:= READURAM( , 0x0070, 64) 
[ 17659] U669c:  SAVEUIP( , 0x01, U3048) !m0 
FUN_ucode_000669d:
[     0] U669d:  tmp4:= AND_DSZ32(0x00000070, tmp11) 
[ 17665] U61aa:  tmp6:= CONCAT_DSZ32(tmp5, tmp6) 
[ 17690] U61a0:  tmp9:= CONCAT_DSZ32(tmp9, 0xffffffffffffffdf) 
[     0] U61a1:  tmp7:= ZEROEXT_DSZ32(0x00000020) 
[ 17708] U18d4:  tmp6:= ZEROEXT_DSZ32(0x00000400) 
[     0] U18d5:  tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 
[ 17748] U66b2:  MOVETOCREG_SHR_DSZ64(tmp4, 0x00000020, 0x008) !m2 
[ 17752] U66a4:  tmp1:= NOTAND_DSZ32(tmp4, tmp1) 
[     0] U66a5:  MOVETOCREG_DSZ64(tmp1, 0x223, 32) !m1,m2 
[ 17753] U20ae: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2128) SEQW GOTO U3c8a
FUN_ucode_0003048:
[ 17756] U3048: LFNCEWTMRK-> WRITEURAM(tmp11, 0x000f, 32) 
[     0] U3049:  tmp0:= NOTAND_DSZ32(0x000f0000, tmp11) SEQW SAVEUIP1 U304aSEQW GOTO U21a1
[ 17764] U61a2:  tmp8:= ZEROEXT_DSZ32(0x0000000f) 
[ 17773] U61a4:  tmp5:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
[     0] U61a5:  tmp6:= MOVEFROMCREG_DSZ64( , 0x2da, 32) !m1 
[ 17781] U61ac:  WRITEURAM(tmp6, 0x003f, 64) !m2 
[     0] U61ad:  MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x2f3) !m1,m2 
[ 17783] U04fe:  SAVEUIP( , 0x01, U05e4) !m0 SEQW GOTO U2712
[ 17784] U18dc:  tmp15:= SUB_DSZ32(0x0000003d, tmp15) 
[     0] U18dd: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp15, U37f4) SEQW URET1
[ 17799] U064e:  WRITEURAM(tmp15, 0x0007, 32) !m2 SEQW GOTO U20a8
[ 17799] U66a0:  tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000004) 
[     0] U66a1:  tmp4:= OR_DSZ32(0x00000002, tmp4) 
FUN_ucode_00018d0:
[ 17807] U18d0:  tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
[     0] U18d1:  tmp6:= NOTAND_DSZ64(0x01c00000, tmp6) 
[ 17807] U66b0:  tmp4:= NOTAND_DSZ64(tmp7, tmp4) 
[     0] U66b1:  tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x2c4, tmp9) !m1,m2 
[ 17814] U61a6:  tmp6:= SHL_DSZ32(tmp6, 0x00000018) 
[ 17817] U013c:  tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00003b00) 
[     0] U013d:  tmp15:= ADD_DSZ32(0x000020c0, tmp15) 
[     0] U619d:  tmp11:= OR_DSZ32(tmp12, tmp11) 
[ 17817] U619e:  tmp9:= ZEROEXT_DSZ32(0xffffffffffffbfff) 
generate_#GP:
[     0] U2711: LFNCEMARK-> SIGEVENT( , 0x000000f5) SEQW GOTO U079d
FUN_ucode_0002712:
[ 17822] U2712:  tmp15:= READUIP_REGOVR(0x00) 
uret0:
[ 17824] U304e:  URET(0x00) 
[ 17828] U2716:  SAVEUIP( , 0x00, U04cc) SEQW GOTO U0139
[ 17835] U3c98:  SAVEUIP( , 0x01, U619d) !m0 SEQW GOTO U0a95
[     0] U3c99:  mm0:= unk_7ea(0x00000000) 
[ 17839] U669e:  tmp4:= SUB_DSZ32(0x00000020, tmp4) 
[ 17845] U18da:  tmp15:= SUB_DSZ32(0x00000001, tmp15) 
[ 17848] U3c90:  tmp0:= SHR_DSZ32(tmp11, 0x00000010) 
[     0] U3c91:  tmp0:= AND_DSZ32(0x0000000f, tmp0) 
[ 17855] U3c94:  tmp0:= AND_DSZ32(0x00000007, tmp11) 
[     0] U3c95:  CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000003, U619d) !m0,m1 
[ 17856] U18d8:  tmp14:= CONCAT_DSZ32(tmp14, tmp15) 
[     0] U18d9:  tmp15:= AND_DSZ32(0x0000003f, tmp13) 
[     0] U3c89:  tmp15:= SHL_DSZ32(tmp15, 0x00000004) SEQW GOTO U1a62
[ 17858] U3c8a: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x221, 32) !m1 
[ 17878] U304c:  TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U308c
[     0] U304d:  NOP 
[ 17883] U61b0:  SAVEUIP( , 0x00, U7575) SEQW GOTO U669d
[     0] U61b1:  tmp11:= CONCAT_DSZ32(0x0000000b) 
[ 17888] U66b4:  tmp4:= SHR_DSZ32(tmp4, 0x00000018) 
[     0] U66b5: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x2da, tmp8) !m1,m2 SEQW URET1
[ 17894] U7574:  NOP 
[     0] U7575: LFNCEWAIT-> tmp1:= READURAM( , 0x000f, 64) SEQW SAVEUIP0 U7576SEQW GOTO U04fc
[ 17896] U66a2:  tmp1:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
[ 17905] U3c96:  UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U3c98) SEQW SAVEUIP1 U3c98SEQW GOTO U18d0
FUN_ucode_0000a95:
[     0] U0a95:  tmp15:= ZEROEXT_DSZ32(0x00000002) 
[ 17906] U0a96:  PORTOUT_DSZ32_ASZ16_SC1(0x5114,  , tmp15) !m2 SEQW URET1
[ 17917] U2714:  tmp13:= CONCAT_DSZ32(tmp13, tmp15) 
[     0] U2715:  tmp14:= CONCAT_DSZ32(tmp14, 0x0000198d) 
[ 17927] U20aa:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U3a96) 
[ 17927] U3c92:  CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000006, U619d) !m0,m1 
[ 17937] U20ac:  tmp11:= READURAM( , 0x000f, 64) 
[     0] U20ad:  tmp1:= AND_DSZ32(0x00000070, tmp11) 
[ 17943] U064c:  tmp15:= ZEROEXT_DSZ32(0x000000f0) 
[     0] U064d:  tmp15:= CONCAT_DSZ16(tmp15, 0x0000182d) 
[ 17945] U3c8e:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp12, U1975) 
[ 17946] U20a8:  tmp0:= MOVEFROMCREG_DSZ64( , 0x068) 
[     0] U20a9:  tmp0:= SUB_DSZ16(0x00003a94, tmp0) 
FUN_ucode_00004fc:
[ 17953] U04fc: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x0b4) !m2 
[     0] U04fd:  TESTUSTATE( , UCODE, 0x0400) ? SEQW URET0
[ 17961] U18d2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp6, 0x00c) !m2 
[ 17962] U18d6:  tmp15:= READUIP_REGOVR(0x01) !m0 
[ 17974] U04ce:  tmp15:= ADD_DSZ32(0x00000020, tmp15) SEQW GOTO U04cc
[ 17984] U013e:  WRMSLOOPCTRFBR( , 0x0000000f) SEQW URET0
FUN_ucode_0000139:
[     0] U0139:  tmp15:= READURAM( , 0x0020, 64) 
[ 17999] U013a:  tmp15:= BT_DSZ32(tmp15, 0x00000001) 
[ 18008] U304a:  NOP 
[ 18010] U065c:  tmp15:= MOVETOCREG_BTS_DSZ64( , 0x089) !m2 
[     0] U065d: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000001, U5b44) !m2 
[ 18028] U61ae:  SAVEUIP( , 0x01, U3048) !m0 
[ 18037] U04cc:  TESTUSTATE( , UCODE, !UST_MSLOOPCTR_NONZERO) !m0 ? SEQW URET1
[     0] U04cd:  STADSTGBUF_DSZ64_ASZ16_SC1(tmp15,  , tmp7) 
[ 18049] U05e4:  tmp15:= MOVEFROMCREG_DSZ64( , 0x7f0) 
[     0] U05e5:  BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000008, U065c) 
[ 18104] U61a8:  tmp6:= OR_DSZ32(tmp5, tmp6) 
[     0] U61a9:  tmp5:= MOVEFROMCREG_DSZ64( , 0x008) 
[ 18144] U66a6:  TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U66ae
[ 18176] U065e:  tmp15:= MOVEFROMCREG_DSZ64( , 0x089) SEQW GOTO U065d
[ 18238] U21a0:  tmp7:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U2181
FUN_ucode_00021a1:
[     0] U21a1:  PORTOUT_DSZ32_ASZ16_SC1(0x00c8,  , tmp0) !m2 
[ 18282] U58c0:  UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U5750) SEQW GOTO U392a
FUN_ucode_00058c1:
[     0] U58c1:  tmp1:= READURAM( , 0x0053, 64) !m2 
[ 19105] U198c: SYNCFULL-> UJMP( , tmp13) 
[     0] U198d:  SAVEUIP( , 0x00, U04d4) SEQW SAVEUIP1 U198eSEQW GOTO U0139
[     0] U06ad:  MOVETOCREG_BTS_DSZ64( , 0x0000000b, 0x070) !m0,m2 
[ 19106] U06ae:  UJMP( , tmp14) 
[ 19121] U5b44:  SFENCE() SEQW GOTO U06ae
[     0] U5b45:  tmp7:= LDZX_DSZ32_ASZ32_SC1(tmp11, 0x00000018, mode=0x18) 
[ 19467] U04d4:  TESTUSTATE( , UCODE, !UST_MSLOOPCTR_NONZERO) !m0 ? SEQW URET1
[     0] U04d5:  tmp7:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp15) 
[ 19629] U04d6:  tmp15:= ADD_DSZ32(0x00000020, tmp15) SEQW GOTO U04d4
[ 19872] U1992:  UFLOWCTRL(tmp15, tmp14, URET1) 
[ 19897] U1994:  tmp15:= ZEROEXT_DSZ64(tmp13) 
[     0] U1995:  tmp13:= SHR_DSZ64(tmp13, 0x00000020) 
[ 19905] U1996:  UJMP( , tmp15) 
[ 20003] U1990:  tmp15:= UFLOWCTRL( , tmp15, URET0) 
[     0] U1991:  tmp14:= SHR_DSZ64(tmp14, 0x00000020) 
[ 20010] U7578:  tmp9:= MOVEFROMCREG_DSZ64( , 0x2f1, 32) !m1 
[     0] U7579:  WRITEURAM(tmp9, 0x001c, 32) !m2 
[ 20019] U3c60:  SAVEUIP_REGOVR(0x01, U3c61, 0x0000) !m0 SEQW GOTO U2b15
[     0] U3c61:  tmp1:= READURAM( , 0x000f, 64) 
[ 20034] U7576:  tmp1:= AND_DSZ32(0x00000070, tmp1) 
[ 20071] U757e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U7580) SEQW GOTO U3c5c
[ 20083] U757a:  tmp9:= NOTAND_DSZ32(0x00000607, tmp9) 
[ 20090] U3c5c:  tmp9:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
[     0] U3c5d:  MOVETOCREG_BTS_DSZ64(tmp9, 0x00000005, 0x29d) !m1,m2 
[ 20113] U757c:  MOVETOCREG_OR_DSZ64(tmp9, 0x2f1, tmp1) !m1,m2 
[     0] U757d:  tmp9:= SUB_DSZ32(0x00000030, tmp1) 
[ 20118] U3c5e: LFNCEWAIT-> PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , tmp1) !m2 
[ 20244] U198e:  tmp15:= SHR_DSZ64(tmp13, 0x00000020) 
[     0] U06c5:  NOP 
uret1:
[ 21135] U06c6: SYNCFULL-> URET(0x01) !m0 
[ 21250] U3c68:  MOVETOCREG_BTS_DSZ64(tmp1, 0x00000005, 0x2c2) !m1 
[     0] U3c69:  SIGEVENT( , 0x000000b2) SEQW UEND2
[ 21391] U3c64:  tmp1:= SUB_DSZ32(0x00000030, tmp1) 
[     0] U3c65:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3c66) SEQW GOTO U3c69
[ 21440] U3c62:  tmp1:= AND_DSZ32(0x00000070, tmp1) 
[ 28725] U2128:  tmp12:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
[     0] U2129: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp12, 0x00000007, U6dde) !m0,m1 
[ 28906] U212c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x2f1, 32) !m1 
[     0] U212d:  PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , 0x00000000) !m2 
[ 29084] U5e2e:  tmp5:= MOVEFROMCREG_DSZ64( , 0x401) 
[ 29091] U5f4e:  MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1,m2 
[ 29093] U212e:  tmp0:= MOVEFROMCREG_DSZ64( , 0x2eb, 32) !m1 
[ 29108] U5f50:  MOVETOCREG_SHR_DSZ64(tmp0, 0x00000018, 0x2da) !m1,m2 
[     0] U5f51: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) !m2 
[ 29122] U212a:  tmp0:= READURAM( , 0x001c, 64) 
FUN_ucode_0005e21:
[     0] U5e21:  tmp4:= SHR_DSZ64(tmp6, 0x00000012) 
[ 29129] U5e22:  tmp4:= AND_DSZ32(0x0000003f, tmp4) 
[ 29139] U5f4c:  SAVEUIP( , 0x00, U0674) SEQW GOTO U76d8
[     0] U5f4d:  tmp0:= READURAM( , 0x003f, 64) 
[ 29152] U6c9c:  tmp5:= NOTAND_DSZ32(tmp5, 0x00000003) 
[     0] U6c9d:  tmp5:= SELECTCC_DSZ32_CONDNZ(tmp5, tmp3) 
[ 29183] U6ca0:  tmp3:= unk_2a4(tmp4, tmp3) 
[     0] U6ca1:  tmp4:= SHR_DSZ32(tmp3, 0x00000002) 
[ 29193] U6caa:  tmp4:= SUB_DSZ32(tmp4, 0x00000080) 
[ 29216] U5f52:  SAVEUIP( , 0x01, U5e21) !m0 SEQW SAVEUIP0 U5f54SEQW GOTO U6c86
[ 29225] U5e2a:  tmp4:= unk_2e4(tmp1, tmp4) 
[ 29231] U6ca6:  tmp4:= SHR_DSZ32(tmp4, 0x00000005) 
[ 29234] U2136:  WRITEURAM(tmp11, 0x000f, 32) 
[ 29245] U6c92:  tmp4:= ADD_DSZ32(0x00000001, tmp4) 
[ 29245] U6ca2:  tmp4:= AND_DSZ32(0x00003ffe, tmp4) 
[ 29246] U6c90:  tmp4:= AND_DSZ32(0x00000f00, tmp6) 
[     0] U6c91:  tmp4:= SHR_DSZ64(tmp4, 0x00000008) 
[ 29259] U6c96:  tmp3:= SHR_DSZ32(tmp3, 0x00000001) 
[ 29269] U5f54:  tmp14:= READURAM( , 0x0007, 64) 
[     0] U5f55:  tmp14:= BT_DSZ32(tmp14, 0x00000017) 
[ 29281] U2130: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U212e) !m1 
[     0] U2131:  tmp0:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
[ 29285] U2132:  MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x29d) !m1 
[ 29285] U6c94:  tmp4:= unk_2e4(tmp4, tmp5) 
[     0] U6c95:  tmp3:= AND_DSZ32(0x0000001e, tmp6) 
[ 29288] U5f58:  tmp13:= ZEROEXT_DSZ32() 
[     0] U5f59:  tmp5:= SUB_DSZ8(0x00000001, tmp11) 
[ 29299] U6c8c:  tmp1:= SUB_DSZ32(tmp1, tmp4) 
[     0] U6c8d:  tmp1:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000001) 
[ 29306] U213a:  CMPUJZ_DIRECT_NOTTAKEN(tmp13, 0x00000006, U5f4d) !m0,m2 
[ 29314] U488c: LFNCEWAIT-> WRITEURAM( , 0x00000000, 0x008f, 64) !m2 
[     0] U488d:  tmp1:= READURAM( , 0x0070, 64) 
[ 29315] U5e28:  tmp4:= SETCC_CONDNZ(tmp4) 
[     0] U5e29:  tmp4:= ADD_DSZ8(tmp5, tmp4) 
[ 29317] U2514:  NOP SEQW URET1
[     0] U2515:  TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U4864
[ 29318] U6cb4: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp1, 0x232, tmp4) !m1 SEQW URET1
[     0] U6cb5:  tmp10:= unk_6a0() 
[ 29319] U2138:  tmp13:= SHR_DSZ32(tmp11, 0x00000010) 
[     0] U2139:  tmp13:= AND_DSZ32(0x0000000f, tmp13) 
[ 29343] U486c:  WRITEURAM( , 0x00000000, 0x000f, 32) 
[     0] U486d: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U486e) SEQW GOTO U488c
[ 29347] U6c8a:  tmp4:= AND_DSZ32(0x0003f000, tmp4) 
[ 29358] U2134:  tmp11:= READURAM( , 0x000f, 64) 
[     0] U2135:  tmp11:= NOTAND_DSZ32(0x00000070, tmp11) 
[ 29366] U5e30:  tmp5:= NOTAND_DSZ32(0x00007e00, tmp5) 
[     0] U5e31: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp5, 0x401, tmp4) SEQW URET0
[ 29378] U6cac:  tmp4:= unk_2a4(tmp3, tmp4) 
[     0] U6cad:  tmp4:= SHL_DSZ32(tmp4, 0x00000004) 
[ 29380] U6ca4:  tmp1:= OR_DSZ32(tmp4, tmp1) 
[     0] U6ca5:  tmp4:= AND_DSZ32(0x000000e0, tmp6) 
[ 29414] U213e: LFNCEMARK-> SAVEUIP( , 0x01, U5f4d) !m0 SEQW GOTO U208d
[ 29423] U6cb0:  tmp5:= READURAM( , 0x001c, 64) 
[     0] U6cb1:  tmp5:= SHR_DSZ64(tmp5, 0x00000020) 
[ 29424] U4866: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x223, 32) !m1 
[ 29430] U23fc:  NOP SEQW GOTO U2515
[     0] U23fd:  NOP 
[ 29432] U5f5a: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp5, U5f5c) SEQW GOTO U23fc
FUN_ucode_0006c86:
[ 29435] U6c86:  tmp6:= MOVEFROMCREG_DSZ64( , 0x231, 32) !m1 
[ 29453] U213c:  tmp13:= AND_DSZ32(0x00000007, tmp11) 
[     0] U213d:  CMPUJZ_DIRECT_NOTTAKEN(tmp13, 0x00000003, U5f4d) !m0,m2 
[ 29455] U6c8e:  tmp5:= SHR_DSZ32(tmp4, 0x0000000c) 
[ 29461] U6c88:  tmp1:= AND_DSZ32(0x0003f000, tmp6) 
[     0] U6c89:  tmp4:= SHR_DSZ32(tmp6, 0x00000006) 
[ 29471] U6c9a:  tmp5:= SHR_DSZ64(tmp5, 0x00000030) 
[ 29474] U5e26:  tmp4:= unk_361(tmp5) 
[ 29499] U6c98:  tmp3:= ADD_DSZ32(0x00000009, tmp3) 
[     0] U6c99:  tmp5:= READURAM( , 0x0020, 64) 
[ 29504] U5e2c:  tmp4:= AND_DSZ32(0x0000003f, tmp4) 
[     0] U5e2d:  tmp4:= SHL_DSZ32(tmp4, 0x00000009) 
[ 29505] U6ca8:  tmp5:= SHL_DSZ32(tmp4, 0x00000002) 
[     0] U6ca9:  tmp4:= ADD_DSZ32(tmp5, tmp4) 
[ 29539] U4890:  MOVETOCREG_SHR_DSZ64(tmp1, 0x00000018, 0x2da) !m1,m2 
[     0] U4891:  tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
[ 29609] U5f56:  tmp14:= CMOVCC_DSZ32_CONDB(tmp14, 0x00003a81) 
[ 29614] U5e24:  tmp1:= ZEROEXT_DSZ32(0x00000003) 
[     0] U5e25:  tmp5:= unk_2e6(tmp1, tmp4) 
FUN_ucode_00065b8:
[ 29625] U65b8:  MOVETOCREG_SHR_DSZ64(tmpv0, 0x00000038, 0x08b) !m2 
FUN_ucode_00065b9:
[     0] U65b9:  tmpv0:= SHL_DSZ64(tmpv0, 0x00000008) 
[ 29628] U6c9e:  tmp3:= ADD_DSZ32(tmp5, tmp3) 
[ 29629] U6b44: SYNCMARK-> UFLOWCTRL( , tmp14, URET1) 
[     0] U6b45:  tmpv0:= MOVEFROMCREG_DSZ64( , 0x220, 32) !m1 
[ 29630] U4868:  MOVETOCREG_DSZ64( , 0x00000000, 0x2f1, 32) !m1 
[     0] U4869:  MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2f2) !m0,m1 
[ 29653] U5e0e:  BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x0000000a, U6b44) !m0,m1 
[ 29674] U6cae:  tmp4:= AND_DSZ32(0x07ffc000, tmp4) 
[     0] U5e05: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x0b5) !m2 
FUN_ucode_0005e06:
[ 29677] U5e06:  tmpv1:= TESTUSTATE( , UCODE, 0x0400) ? SEQW URET1
[ 29679] U0414:  tmp13:= MOVEFROMCREG_DSZ64( , 0x000) !m2 
[     0] U0415:  tmp13:= SIGEVENT(tmp13, 0x00000003) 
[ 29687] U1830:  tmp3:= AND_DSZ32(0x00008000, tmp3) 
[     0] U1831:  tmp3:= SHR_DSZ32(tmp3, 0x0000000f) 
[ 29696] U486a:  tmp0:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U486cSEQW GOTO U21a1
[ 29701] U6cb2:  tmp1:= CONCAT_DSZ32(tmp5, tmp1) 
[ 29713] U6b48:  tmpv0:= SHL_DSZ32(tmpv0, 0x00000008) 
[     0] U6b49:  tmpv0:= OR_DSZ32(0x00000302, tmpv0) 
[ 29727] U4898:  tmp5:= unk_04d( , IMM_MACRO_21) !m0 SEQW GOTO U5e05
[     0] U4899:  NOP 
[ 29732] U488e:  MOVETOCREG_DSZ64(tmp1, 0x2c4, 32) !m1,m2 
[ 29750] U5e08:  tmpv0:= READUIP_REGOVR(0x01) !m0 
[     0] U5e09:  tmp14:= CONCAT_DSZ32(tmp14, tmpv0) 
[ 29753] U4892:  tmp0:= MOVEFROMCREG_DSZ64( , 0x008) 
[ 29753] U5e0c:  BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000002, U0416) !m0 
[     0] U5e0d:  tmpv0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
[ 29770] U4896:  tmp0:= ZEROEXT_DSZ64(tmp14) 
[ 29790] U4894:  tmp0:= AND_DSZ32(0x00004000, tmp0) 
[     0] U4895:  MOVETOCREG_OR_DSZ64(tmp0, 0x008, tmp1) !m2 
[ 29802] U1832:  tmp14:= READURAM( , 0x0047, 64) 
[ 29826] U5e0a: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x0b1) 
[ 29832] U489a:  NOP 
[     0] U208d:  tmp15:= ZEROEXT_DSZ32(0x00000001) 
[ 29834] U208e:  PORTOUT_DSZ32_ASZ16_SC1(0x5114,  , tmp15) !m2 SEQW URET1
[ 29840] U0416: SYNCFULL-> UJMP( , tmp14) 
[ 29887] U1834:  tmp14:= MOVEMERGEFLGS_DSZ32(tmp14, tmp3) 
[     0] U1835:  tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x00001842) SEQW GOTO U4c09
[ 29899] U4864:  tmp0:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
[     0] U4865:  tmp0:= OR_DSZ32(0x00000097, tmp0) 
[ 29919] U489c:  tmp14:= ZEROEXT_DSZ64(tmp0) SEQW GOTO U0414
[     0] U489d: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000e, 0x701) !m0 
[     0] U182d:  tmp3:= READURAM( , 0x0053, 64) 
[ 29932] U182e:  WRITEURAM( , 0x00000000, 0x0007, 32) 
[ 29950] U6b46:  tmpv0:= AND_DSZ32(0x00003f00, tmpv0) 
[ 30022] U65ba:  MOVETOCREG_OR_DSZ64(tmpv0, 0x08a, tmpv1) !m2 SEQW GOTO U06c6
[ 38797] U58c2:  tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
write_port_4c:
[     0] U0bc9:  tmp7:= ZEROEXT_DSZ32(0x4000004c) 
[ 38939] U0bca:  tmp8:= ZEROEXT_DSZ32(0x00000002) 
[ 41015] U184a:  tmp0:= CMOVCC_DSZ32_CONDB(tmp0, 0x00000000) SEQW SAVEUIP0 U184cSEQW GOTO U58c1
[ 41089] U1842:  MOVETOCREG_OR_DSZ64( , 0x00000018, 0x29d) !m1 
[ 41124] U1846:  WRITEURAM(tmp0, 0x0053, 32) 
[ 41142] U0bcc:  PORTOUT_DSZ32_ASZ16_SC1(tmp7,  , tmp8) 
[     0] U0bcd:  tmp8:= PORTIN_DSZ32_ASZ16_SC1(tmp7) 
[     0] U621d:  tmp15:= CONCAT_DSZ16(tmp15, 0x0000622a) 
[ 41182] U621e:  WRITEURAM(tmp15, 0x0007, 32) !m2 
[ 41213] U1844:  tmp0:= READURAM( , 0x0053, 64) 
[     0] U1845:  tmp0:= OR_DSZ64(0x00000008, tmp0) 
[ 41249] U1848:  tmp0:= BT_DSZ64(tmp0, 0x00000002) 
[     0] U1849:  tmp0:= MOVEMERGEFLGS_DSZ32(0x0000000e, tmp0) 
[ 41345] U58c4:  tmp7:= SUB_DSZ64(0x00000000, tmp1) 
[     0] U58c5:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U304e) SEQW SAVEUIP1 U58c6SEQW GOTO U0bc9
FUN_ucode_000281d:
[     0] U281d:  tmpv0:= READURAM( , 0x0020, 64) 
[ 41507] U281e:  tmpv1:= XOR_DSZ16(tmpv0, 0x00000002) 
[ 43083] U6226:  WRITEURAM(tmp1, 0x005c, 64) !m2 
[ 43109] U58c6:  tmp7:= unk_222(tmp1) 
[ 43146] U6220:  tmp15:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
[     0] U6221:  tmp15:= AND_DSZ64(0x00000400, tmp15) 
[ 43170] U58c8:  tmp7:= CONCAT_DSZ16(tmp7, tmp7) 
[     0] U58c9:  tmp7:= unk_0fc(tmp0, tmp7) 
[ 43202] U2820:  tmpv2:= PORTIN_DSZ32_ASZ16_SC1(0x0004) !m2 
[     0] U2821:  tmpv2:= BT_DSZ32(tmpv2, tmpv1) 
[ 43223] U6224:  tmp1:= READURAM( , 0x005c, 64) 
[     0] U6225:  tmp1:= NOTAND_DSZ64(tmp15, tmp1) 
[ 43354] U58cc: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0064,  , tmp1) !m2 
[     0] U58cd:  PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 SEQW URET0
[ 43427] U6222:  tmp15:= SHL_DSZ64(tmp15, 0x00000006) 
[ 43470] U58ca:  PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp7) !m2 
[ 43501] U184c:  tmp15:= ZEROEXT_DSZ32(0x000000ed) SEQW GOTO U621d
[     0] U184d: LFNCEWAIT-> unk_e6b(tmp0, tmp2) 
[ 43547] U6228:  SAVEUIP_REGOVR(0x01, U6229, 0x0210) !m0 SEQW GOTO U281d
[     0] U6229:  UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U43a6) 
[ 43548] U0bce:  BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U0bcd) SEQW GOTO U06c6
[     0] U43a5:  NOP 
[ 46938] U43a6:  tmp15:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
FUN_ucode_00060b8:
[ 48925] U60b8:  NOP SEQW SAVEUIP1 U60b9SEQW GOTO U0bc9
[     0] U60b9:  tmp7:= PORTIN_DSZ32_ASZ16_SC1(0x0018) !m2 
[ 49048] U2822:  tmpv0:= SELECTCC_DSZ64_CONDB(tmpv2, tmpv0) 
[ 49104] U2824:  tmpv0:= BT_DSZ64(tmpv0, 0x0000002f) SEQW URET1
[     0] U2825:  SAVEUIP_REGOVR(0x01, U2826, 0x0008) !m0 SEQW GOTO U2b15
[ 49184] U43a8: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000003, U5be5) !m0,m2 SEQW GOTO U5964
[     0] U43a9:  NOP 
[ 53037] U60ba:  PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 
[ 53097] U60bc:  tmp1:= AND_DSZ32(0x000000ff, tmp7) 
[     0] U60bd:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U304e) SEQW GOTO U60b8
[     0] U5be5:  NOP SEQW SAVEUIP0 U5be6SEQW GOTO U60b8
[ 63685] U5be6:  WRITEURAM( , 0x00000000, 0x0007, 32) 
[ 65621] U5bec:  tmp4:= READURAM( , 0x008d, 64) 
[     0] U5bed:  PORTOUT_DSZ32_ASZ16_SC1(0x0010,  , tmp4) !m2 
[ 65784] U5be8:  tmp0:= READURAM( , 0x0053, 64) 
[     0] U5be9:  tmp0:= NOTAND_DSZ64(0x00000008, tmp0) 
[ 66109] U5bea:  WRITEURAM(tmp0, 0x0053, 32) 
[ 66211] U5bee:  SAVEUIP_REGOVR(0x01, U5bf0, 0x0210) !m0 SEQW GOTO U281d
[ 67610] U5efc:  tmp1:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
[     0] U5efd:  BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U2bc8) !m0,m1 
[ 67838] U1ac4:  SAVEUIP_REGOVR( , 0x01, U1ac5, 0xc935) !m0 SEQW GOTO U0d52
[     0] U1ac5:  tmp2:= ZEROEXT_DSZ32(0x00000006) 
[ 69588] U5f04:  tmp1:= BT_DSZ32(tmp1, 0x00000007) 
[     0] U5f05:  tmp1:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00000002) 
[ 69592] U1ac8:  tmp3:= ZEROEXT_DSZ32(0x00000080) 
[     0] U1ac9:  tmp12:= ZEROEXT_DSZ32() 
[ 69672] U5f00:  WRITEURAM(tmp0, 0x000d, 32) !m2 
[     0] U5f01:  tmp2:= OR_DSZ32(0x000000c0, tmp2) 
[ 69676] U1ac6:  tmp1:= ZEROEXT_DSZ32(0x70000000) 
[ 69706] U1aca:  SAVEUIP_REGOVR(0x01, U1acc, 0x0008) !m0 SEQW GOTO U2b15
[ 69772] U5f02:  tmp1:= READURAM( , 0x0035, 64) 
[ 69775] U5f08:  tmp0:= READURAM( , 0x005c, 64) 
[     0] U5f09:  BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U112e) !m2 
[ 69794] U5f06:  MOVETOCREG_OR_DSZ64(tmp2, 0x6c5, tmp1) !m2 
[ 69798] U5efe:  tmp0:= ZEROEXT_DSZ32(0x00002bc6) 
[ 69942] U5bf0:  tmp2:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000001) SEQW GOTO U5efc
[     0] U5bf1:  tmp1:= SAR_DSZ64(tmp1, 0x00000010) 
[ 69990] U1ad2:  TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1ad0
[ 70021] U1ad0: LFNCEWAIT-> unk_def(tmp2) 
[     0] U1ad1:  tmp2:= ADD_DSZ32(0x00000040, tmp2) 
[ 70032] U1ace:  NOP 
crbus_sync_with_289:
[     0] U32cd:  MOVETOCREG_OR_DSZ64( , 0x00000001, 0x289) !m1,m2 
[ 70202] U32ce:  tmpv0:= MOVEFROMCREG_DSZ64( , 0x289, 32) !m1,m2 SEQW GOTO U31be
[ 70214] U5f0a:  tmp14:= ZEROEXT_DSZ32(0x0000112e) SEQW GOTO U1ac5
[ 70280] U1ae8:  MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
[     0] U1ae9:  tmp6:= AND_DSZ32(0x000000ff, tmp6) 
[ 70319] U1acc: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x63a) 
[     0] U1acd:  WRMSLOOPCTRFBR( , 0x0000017f) 
[     0] U31bd:  NOP 
[ 70495] U31be:  BTUJB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U1cbe) !m2 SEQW GOTO U32ce
[ 71912] U1ad6:  tmp5:= MOVEFROMCREG_DSZ64( , 0x6c5) 
[ 71937] U1ada:  tmp15:= SHR_DSZ32(tmp15, 0x00000013) 
[ 72181] U1ad4: ROVR<- UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp12, tmp12) SEQW SAVEUIP1 U1ad5SEQW GOTO U32cd
[     0] U1ad5:  tmp6:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 
[ 72249] U1ad8:  tmp5:= NOTAND_DSZ32(0x00000008, tmp5) 
[     0] U1ad9:  tmp15:= AND_DSZ32(0x00400000, tmp6) 
[ 72323] U1ade:  BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x00000008, U1ae0) !m2 SEQW GOTO U1ae9
[ 72331] U1adc: SYNCMARK-> MOVETOCREG_OR_DSZ64(tmp5, 0x6c5, tmp15) !m2 
[     0] U1add:  MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
[ 72360] U1aea:  tmp6:= unk_222(tmp6) 
[ 72384] U1aee:  tmp1:= ZEROEXT_DSZ32(tmp8) 
[ 72439] U1aec:  tmp6:= ADD_DSZ32(tmp6, tmp6) 
[     0] U1aed:  tmp8:= ZEROEXT_DSZ32(tmp1) 
[ 72452] U1af0:  tmp8:= ADD_DSZ32(0x00040000, tmp8) 
[     0] U1af1:  tmp6:= SUB_DSZ32(0x00000001, tmp6) 
[ 72476] U1af4:  unk_fdf(tmp1) 
[     0] U1af5:  tmp1:= ADD_DSZ32(0x00000040, tmp1) 
[ 72521] U1af2:  WRMSLOOPCTRFBR( , 0x000003ff) 
[ 72596] U1af6:  TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1af4
[117407] U1b00:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U1b01) SEQW GOTO U1aee
[     0] U1b01:  NOP 
[119682] U1af8: SYNCWAIT-> TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U1b00
[     0] U1af9:  WRMSLOOPCTRFBR( , 0x000003ff) 
[     0] U7601:  tmp12:= ZEROEXT_DSZ32(0x00000c52) 
[834293] U7602:  tmp5:= TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U7606
thunk_FUN_ucode_0002712:
[834306] U28ec:  SAVEUIP( , 0x01, U2ad9) !m0 SEQW GOTO U2712
[     0] U28ed:  tmp3:= unk_1d6(tmp1) 
[     0] U112d:  MOVETOCREG_OR_DSZ64(tmp0, 0x00000001, 0x2bc) !m1 SEQW GOTO U1c3e
[834553] U112e:  tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
[     0] U2ad9:  tmp15:= MOVEFROMCREG_DSZ64( , 0x7f0) 
[834869] U2ada: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp15, 0x7f0) !m2 
[834871] U5a74:  tmp14:= SHR_DSZ64(tmp14, 0x00000020) SEQW GOTO U06ae
[     0] U5a75:  tmp2:= OR_DSZ64(tmp1, tmp2) 
[     0] U0279:  tmm0:= unk_526(xmmdst, tmm2) !m0 SEQW GOTO U0a21
[836118] U027a:  tmp7:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
[     0] U17f5:  tmpv0:= SAVEUIP(tmp2, 0x00, U38d0) SEQW GOTO U334d
FUN_ucode_00017f6:
[836277] U17f6:  tmp7:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
FUN_ucode_000043c:
[836386] U043c: LFNCEWAIT-> unk_dff() 
[     0] U043d:  MOVETOCREG_OR_DSZ64( , 0x00000002, 0x63a) !m0 
[     0] U27ad:  UFLOWCTRL( , tmp5, UNK) 
FUN_ucode_00027ae:
[836803] U27ae:  NOP 
[836961] U1b02:  NOP 
[837042] U1b04:  SAVEUIP_REGOVR(0x01, U1b05, 0x0006) !m0 SEQW GOTO U2b15
[     0] U1b05:  UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp12, tmp14) 
[838295] U1b08:  SAVEUIP_REGOVR(0x01, U1b09, 0x0006) !m0 SEQW GOTO U2b15
[     0] U1b09:  UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, U039a) 
[838360] U1b06: SYNCFULL-> unk_fcf(tmp3) 
[838483] U1132:  tmp12:= ZEROEXT_DSZ32(0x00001135) 
[838648] U7604:  MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x0b4) 
[     0] U7605:  tmp5:= ZEROEXT_DSZ64(0x00000001) SEQW SAVEUIP0 U7606SEQW GOTO U28ec
[838705] U1130:  tmp0:= READAFLAGS( , tmp0) !m2 
[     0] U1131:  STADSTGBUF_DSZ64_ASZ16_SC1(0x000001a0,  , tmp0) 
[838742] U1b0a:  UJMP( , tmp14) 
[838871] U1134:  TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U7602
[     0] U1135:  tmp8:= READURAM( , 0x005c, 64) 
[839009] U2adc:  AETTRACE(0x0e) 
[     0] U2add:  tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 
[839081] U2ae0:  tmp14:= CONCAT_DSZ32(tmp14, 0x00005a74) SEQW GOTO U05e5
[     0] U2ae1:  tmp7:= PINTMOVDTMM2I_DSZ64(tmm0) 
[839224] U2ade: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp2, 0x00000002, 0x6c3) !m0,m2 
[839457] U7610:  tmp5:= CONCAT_DSZ32(tmp2, tmp5) 
[     0] U7611:  WRITEURAM(tmp5, 0x004f, 64) 
[839507] U7606:  tmp0:= READURAM( , 0x005c, 64) 
[839545] U7608:  BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U7611) !m1,m2 
[     0] U7609:  tmp1:= MOVEFROMCREG_DSZ64( , 0x516) 
[839581] U1144:  tmp8:= CONCAT_DSZ32(tmp5, tmp1) 
[     0] U1145:  STADSTGBUF_DSZ64_ASZ16_SC1(0x000001c0,  , tmp8) 
[839605] U1146:  tmp5:= NOTAND_DSZ32(0x60000000, tmp5) 
[839635] U760c: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp1, 0x0000000b, 0x516) !m0 
[     0] U760d:  MOVETOCREG_BTR_DSZ64(tmp2, 0x0000000b, 0x517) !m0 
[839640] U760e:  tmp5:= OR_DSZ32(tmp5, tmp1) 
[839646] U113a:  tmp1:= MOVEFROMCREG_DSZ64( , 0x384, 32) !m1 
[839675] U7612:  UJMP( , tmp12) 
[839710] U113e:  tmp6:= MOVEFROMCREG_DSZ64( , 0x692) 
[839802] U1148:  MOVETOCREG_DSZ64(tmp5, 0x7f6) 
[     0] U1149:  SAVEUIP_REGOVR(0x01, U114a, 0x0008) !m0 SEQW GOTO U2b15
[839802] U760a: LFNCEMARK-> tmp2:= MOVEFROMCREG_DSZ64( , 0x517) 
[839920] U114a:  tmp8:= MOVEFROMCREG_DSZ64( , 0x3f3, 32) !m1 
[839942] U1142:  tmp5:= MOVEFROMCREG_DSZ64( , 0x7f6) 
[840005] U1136:  BTUJB_DIRECT_NOTTAKEN(tmp8, 0x00000010, U4995) 
[840022] U1140:  tmp1:= ZEROEXT_DSZ8(tmp1, tmp6) 
[     0] U1141:  tmp1:= CONCAT_DSZ16(tmp1, tmp0) 
[840028] U114c:  tmp1:= MOVEFROMCREG_DSZ64( , 0x3f2, 32) !m1 
[     0] U114d:  tmp1:= CONCAT_DSZ8(tmp8, tmp1) 
[840048] U115a:  MOVETOCREG_DSZ64(tmp15, 0x3f2, 32) !m1 
[840050] U17fc: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp7, 0x00000009, U304e) !m1,m2 SEQW GOTO U17fa
[     0] U17fd:  tmm6:= unk_624(tmm2, tmm2) 
[840066] U027e:  tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x00000008, 0x38f) !m1,m2 SEQW URET1
[840081] U1154:  tmp1:= SHL_DSZ32(tmp1, 0x00000008) 
[     0] U1155:  tmp1:= ZEROEXT_DSZ8(tmp8, tmp1) 
[840086] U1180:  STADSTGBUF_DSZ64_ASZ16_SC1(0x00000080,  , tmp1) 
[     0] U1181:  tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
[840098] U1158:  tmp15:= ZEROEXT_DSZ32(0x000000ff) 
[     0] U1159: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x3f3, 32) !m1 
[840132] U115e:  tmp0:= ZEROEXT_DSZ32(0x0000008e) 
[840145] U1138:  SAVEUIP_REGOVR(0x01, U1139, 0x0000) !m0 SEQW GOTO U32cd
[     0] U1139:  tmp0:= MOVEFROMCREG_DSZ64( , 0x383, 32) !m1 
[840155] U1162:  tmp0:= MOVEFROMCREG_DSZ64( , 0x104) 
[840171] U17f8:  tmp7:= NOTAND_DSZ32(0x00000200, tmp7) 
[     0] U17f9: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp7, 0x00000008, 0x38f) !m1 
[840212] U1150:  tmp1:= SHL_DSZ32(tmp1, 0x00000008) 
[     0] U1151:  tmp1:= ZEROEXT_DSZ8(tmp8, tmp1) 
[840228] U115c:  MOVETOCREG_DSZ64(tmp15, 0x3f1, 32) !m1 
[     0] U115d:  MOVETOCREG_DSZ64(tmp15, 0x3f0, 32) !m1 
[840232] U1160:  tmp1:= SUB_DSZ32(0x00000200) 
[     0] U1161:  SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U1162SEQW GOTO U17f6
[840239] U113c:  tmp0:= CONCAT_DSZ8(tmp1, tmp0) 
[     0] U113d:  tmp1:= MOVEFROMCREG_DSZ64( , 0x10c) 
[840247] U1168: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp0, 0x00000008, 0x39e) !m1 
[     0] U1169:  tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000200) 
[840277] U1152: LFNCEMARK-> tmp8:= MOVEFROMCREG_DSZ64( , 0x3f0, 32) !m1 
[840282] U027c:  tmp7:= NOTAND_DSZ32(tmp1, tmp7) 
[     0] U027d: SYNCFULL-> tmp7:= MOVETOCREG_OR_DSZ64(tmp7, 0x38f, tmp0) !m1 
[840326] U114e:  tmp8:= MOVEFROMCREG_DSZ64( , 0x3f1, 32) !m1 
[840336] U1156:  STADSTGBUF_DSZ64_ASZ16_SC1(0x00000200,  , tmp1) 
[840379] U1164:  MOVETOCREG_BTS_DSZ64(tmp0, 0x00000015, 0x104) 
[     0] U1165:  STADSTGBUF_DSZ64_ASZ16_SC1(0x000001e0,  , tmp0) 
[840385] U1170:  MOVETOCREG_OR_DSZ64( , 0x00000003, 0x10c) !m0 
[     0] U1171:  MOVETOCREG_OR_DSZ64( , 0x00000003, 0x383) !m0,m1 
[840410] U043e:  MOVETOCREG_OR_DSZ64( , 0x00000007, 0x63e) !m0 SEQW GOTO U27ae
[840436] U117e:  MOVETOCREG_DSZ64(tmp0, 0x562) 
[840457] U1192:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U1194) SEQW GOTO U1190
[840462] U1182:  STADSTGBUF_DSZ64_ASZ16_SC1(0x000000a0,  , tmp1) 
[840463] U117c:  tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 
[     0] U117d:  tmp0:= NOTAND_DSZ64(0x00000007, tmp2) 
[840468] U1184:  STADSTGBUF_DSZ64_ASZ16_SC1(0x000000c0,  , tmp2) 
[     0] U1185:  tmp2:= MOVEFROMCREG_DSZ64( , 0x563) 
[840499] U116c: LFNCEWAIT-> STADSTGBUF_DSZ64_ASZ16_SC1(0x00000200,  , tmp0) 
[     0] U116d:  tmp0:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
[840500] U1174:  tmp6:= MOVEFROMCREG_DSZ64( , 0x692) 
[     0] U1175:  MOVETOCREG_BTS_DSZ64(tmp6, 0x00000008, 0x692) 
[840502] U116a:  tmp0:= CONCAT_DSZ32(tmp0, tmp1) 
[840585] U1166:  tmp0:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 
[840589] U1178:  tmp1:= MOVEFROMCREG_DSZ64( , 0x574) 
[     0] U1179:  tmp0:= NOTAND_DSZ64(0x00000007, tmp1) 
[840685] U17fa:  tmp7:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
[840686] U27b2: LFNCEMARK-> WRITEURAM(tmp15, 0x005c, 64) SEQW URET1
[840688] U118a: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000015, 0x000) SEQW SAVEUIP1 U118cSEQW GOTO U043c
[840730] U27b0:  tmp15:= READURAM( , 0x005c, 64) 
[     0] U27b1:  tmp15:= BTS_DSZ64(tmp15, 0x0000002b) 
[840737] U1176:  MOVETOCREG_BTS_DSZ64( , 0x00000013, 0x2dd) !m0,m1 
[840754] U1188:  tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
[     0] U1189:  MOVETOCREG_OR_DSZ64(tmp8, 0x00000001, 0x51b) 
[840787] U116e:  MOVETOCREG_BTS_DSZ64(tmp0, 0x29d) !m1 
[840807] U1172:  MOVETOCREG_OR_DSZ64( , 0x00000003, 0x384) !m0,m1 
[840851] U118e:  NOP 
[840965] U117a:  MOVETOCREG_DSZ64(tmp0, 0x574) 
[841049] U1186:  STADSTGBUF_DSZ64_ASZ16_SC1(0x000000e0,  , tmp2) 
[841065] U118c: LFNCEWAIT-> tmp0:= BTS_DSZ32(0x00000000, 0x00000012) 
[     0] U118d:  NOP 
[841168] U1190:  tmp0:= SUB_DSZ32(0x00000040, tmp0) 
[     0] U1191: LFNCEWTMRK-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, tmp0, 0x00000000) 
caseD_4:
[1217249] U2320:  MOVETOCREG_DSZ64(tmp2, 0x7fe) SEQW GOTO U2318
[     0] U2321: LFNCEWAIT-> tmp1:= LDZX_DSZ32_ASZ32_SC1(tmp4, tmp6) 
[1218953] U119a:  MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
[1219093] U1198: LFNCEWAIT-> tmp7:= MOVETOCREG_OR_DSZ64(tmp7, 0x00000011, 0x38f) !m1 
[     0] U1199:  MOVETOCREG_BTS_DSZ64( , 0x00000012, 0x2dd) !m0,m1 
[1219144] U11a0:  tmp6:= PORTIN_DSZ64_ASZ16_SC1(0x4648) !m2 
[     0] U11a1: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000010, U38fd) !m1,m2 
[1219310] U119e:  tmp5:= ZEROEXT_DSZ32(tmp13) 
[     0] U1195: LFNCEMARK-> LBSYNC(0x00000001) 
[1219764] U1196:  NOP 
[1219764] U119c:  tmp13:= READURAM( , 0x008e, 64) 
[     0] U119d:  tmp8:= ADD_DSZN(0x00001000, tmp8) !m1 
[1221100] U11a2:  tmp14:= SAVEUIP(0x01, U2321) !m0 
[1221416] U11a4:  tmp6:= TESTUSTATE( , SYS, !UST_SMM | 0xc000) !m0,m1 ? SEQW GOTO U2321
[     0] U11a5:  tmp14:= SAVEUIP(0x01, U11a8) !m0 
[1222297] U2324:  tmp6:= ADD_DSZ32(0x00000004, tmp6) 
[     0] U2325:  tmp5:= SUB_DSZ32(0x00000004, tmp5) 
[1222440] U2326: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDLE(tmp5, U388d) SEQW URET1
[1222987] U2322:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, tmp6, tmp1) 
[     0] U68ad:  WRITEURAM(tmp14, 0x008d, 64) !m2 
[1311339] U68ae:  tmp7:= READURAM( , 0x005c, 64) 
[1311829] U4998:  tmp14:= ZEROEXT_DSZ64N(tmp4) !m1 
[     0] U4999:  tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000008) 
calc_sha256_start:
[1311872] U50c4:  tmm7:= FMOV() 
[     0] U50c5:  tmp0:= ZEROEXT_DSZ32(0x6a09e667) 
[1312438] U388c:  SAVEUIP( , 0x00, U38d0) SEQW GOTO U334d
[     0] U388d:  LBSYNC(0x00000001) 
[1314799] U68b2:  tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp7) 
[1315015] U3894:  tmp1:= AND_DSZ32(0x000c0000, tmp1) 
[     0] U3895: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U27dc) 
[1315311] U3890:  MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
[     0] U3891:  tmp11:= ZEROEXT_DSZ32(0x0000000e) 
[1315364] U68b8:  tmp8:= ADD_DSZ64(0x00000320, tmp7) 
[     0] U68b9: LFNCEMARK-> WRITEURAM(tmp8, 0x004e, 64) !m2 
[1315390] U68c0:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8,  , tmp10) 
[     0] U68c1:  tmp9:= ADD_DSZ32(0x00000001, tmp9) 
[1315460] U68b4:  tmp7:= MOVEFROMCREG_DSZ64( , 0x51b) 
[     0] U68b5:  tmp7:= ZEROEXT_DSZ8( , tmp7) 
[1315466] U68c8:  tmp6:= ZEROEXT_DSZ32(0x00000004) 
[     0] U68c9:  tmp11:= ZEROEXT_DSZ16(0x00004644) 
[1315491] U68b6:  tmp7:= CMOVCC_DSZ64_CONDB(tmp9, tmp7) 
[1315525] U3898:  tmp14:= ZEROEXT_DSZ64N(tmp8) !m1 SEQW GOTO U4999
[     0] U3899:  mm0:= unk_76f(tmm1) 
[1315548] U3896:  MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1,m2 
[1315561] U68bc:  tmp9:= ZEROEXT_DSZ32(0x00000124) 
[     0] U68bd:  tmm5:= FPREADROM_DTYPENOP(tmp9) 
[1315601] U68be:  tmp10:= PINTMOVDTMM2I_DSZ64(tmm5) 
[1315617] U50f0:  tmp12:= SHR_DSZ32(tmp15, 0x0000000a) 
[     0] U50f1:  tmp14:= XOR_DSZ32(tmp12, tmp14) 
[1315633] U68ba:  WRMSLOOPCTRFBR( , 0x0000001f) 
[1315710] U68c4:  TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U68bd
[     0] U68c5:  UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp13, U236a) 
[1315750] U499a:  BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U6f3d) !m1 
[1315792] U68ca:  tmp11:= CONCAT_DSZ16(0x00000001, tmp11) 
[1315827] U50c6:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp0) 
[1315911] U68cc:  WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50c4
[     0] U68cd:  tmp15:= unk_203( , 0x00000001) 
[1315914] U50e4:  tmp13:= SUB_DSZ32(0x00000008, tmp13) 
[     0] U50e5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp13, U50e6) SEQW GOTO U50de
[1315945] U50e2:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020, mode=0x01, tmp13, tmp14) 
[1315988] U50ca:  tmp2:= ZEROEXT_DSZ32(0x3c6ef372) 
[1316026] U50ec:  tmp14:= ROR_DSZ32(tmp15, 0x00000011) 
[     0] U50ed:  tmp12:= ROR_DSZ32(tmp15, 0x00000013) 
[1316032] U3892: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
[1316088] U68c6:  tmp5:= ADD_DSZ64(0x00000080, tmp14) 
[1316112] U68b0:  tmp7:= BT_DSZ32(tmp7, 0x00000010) 
[     0] U68b1:  tmp9:= SUB_DSZ64(0x00001000, tmp14) 
[1316117] U50d0:  tmp4:= ZEROEXT_DSZ32(0x510e527f) 
[     0] U50d1:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010,  , tmp4) 
[1316131] U50fe:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp13) 
[1316142] U68c2:  tmp8:= ADD_DSZ64(0x00000008, tmp8) 
[1316149] U499c:  tmp0:= READURAM( , 0x005c, 64) 
[     0] U499d:  tmp11:= ZEROEXT_DSZ32(0x00000005) 
[1316159] U50c8:  tmp1:= ZEROEXT_DSZ32(0xbb67ae85) 
[     0] U50c9:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004,  , tmp1) 
[1316187] U50f8:  tmp5:= ROR_DSZ32(tmp15, 0x00000012) 
[     0] U50f9:  tmp12:= XOR_DSZ32(tmp5, tmp12) 
[1316210] U50dc:  tmm7:= unk_4ce(tmm7, tmm6) 
[     0] U50dd:  tmp13:= ZEROEXT_DSZ64(0x00000038) 
[1316226] U50de: LFNCEWAIT-> tmp14:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, mode=0x01, tmp13) 
[1316237] U5102:  tmp13:= ADD_DSZ32(0x00000004, tmp13) 
[1316247] U50ea:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000038, tmp13) 
[1316253] U50f6:  tmp12:= ROR_DSZ32(tmp15, 0x00000007) 
[1316292] U50e8:  tmp13:= ADD_DSZ32(0x00000020) 
[     0] U50e9:  tmm0:= unk_744(mm5) 
[1316310] U499e:  BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U27dc) !m1 SEQW GOTO U68ad
[1316345] U5104:  tmp11:= SUB_DSZ32(0x00000001, tmp11) 
[     0] U5105:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U5106) SEQW GOTO U50ea
[1316364] U50cc:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008,  , tmp2) 
[     0] U50cd:  tmp3:= ZEROEXT_DSZ32(0xa54ff53a) 
[1316375] U50fc:  tmp12:= XOR_DSZ32(tmp5, tmp12) 
[     0] U50fd:  tmp14:= ADD_DSZ32(tmp12, tmp14) 
[1316403] U50d6:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018,  , tmp9) 
[1316476] U50e6:  tmp11:= ZEROEXT_DSZ32(0x00000030) 
[1316479] U50fa:  tmp5:= SHR_DSZ32(tmp15, 0x00000003) 
calc_sha256_update:
[1316520] U50da:  tmm6:= unk_704(mm6) 
[1316557] U50f2:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000024, tmp13) 
[1316574] U50ce:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c,  , tmp3) 
[1316638] U5100:  tmp14:= ADD_DSZ32(tmp15, tmp14) 
[     0] U5101:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000040, tmp13, tmp14) 
[1316649] U50d2:  tmp8:= ZEROEXT_DSZ32(0x9b05688c) 
[1316665] U50e0:  tmp14:= unk_37c(tmp14) 
[     0] U50e1:  tmp14:= ROR_DSZ64(tmp14, 0x00000020) 
[1316665] U50f4:  tmp14:= ADD_DSZ32(tmp15, tmp14) 
[     0] U50f5:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004, tmp13) 
[1316728] U50d8:  tmp10:= ZEROEXT_DSZ32(0x5be0cd19) 
[     0] U50d9:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c,  , tmp10) 
[1316850] U512c:  tmp14:= AND_DSZ32(tmp2, tmp0) 
[     0] U512d:  tmp12:= XOR_DSZ32(tmp14, tmp12) 
[1316876] U5126:  tmp14:= ROR_DSZ32(tmp0, 0x00000016) 
[1317106] U5136:  BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000008, U5138) !m2 SEQW GOTO U5109
[1317167] U512a:  tmp12:= AND_DSZ32(tmp1, tmp0) 
[1317175] U50ee:  tmp14:= XOR_DSZ32(tmp12, tmp14) 
[1317209] U511a:  tmp9:= ZEROEXT_DSZ32(tmp8) 
[1317211] U5118:  tmp15:= ADD_DSZ32(tmp10, tmp15) 
[     0] U5119:  tmp10:= ZEROEXT_DSZ32(tmp9) 
[1317285] U5116:  tmp14:= ROR_DSZ32(tmp4, 0x00000019) 
[1317297] U511e:  tmp14:= ROR_DSZ32(tmp0, 0x0000000d) 
[1317313] U50d4:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014,  , tmp8) 
[     0] U50d5:  tmp9:= ZEROEXT_DSZ32(0x1f83d9ab) 
[1317314] U5132:  tmp1:= ZEROEXT_DSZ32(tmp0) 
[1317355] U512e:  tmp14:= AND_DSZ32(tmp2, tmp1) 
[1317365] U510c:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000020, tmp11) 
[     0] U510d:  tmp12:= AND_DSZ32(tmp8, tmp4) 
[1317423] U5110:  tmp14:= XOR_DSZ32(tmp14, tmp12) 
[     0] U5111:  tmp12:= ROR_DSZ32(tmp4, 0x00000006) 
[1317512] U5108: LFNCEWAIT-> tmp5:= READURAM( , 0x004e, 64) 
[     0] U5109:  tmp13:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp11) 
[1317570] U5122:  tmp4:= ADD_DSZ32(tmp15, tmp3) 
[1317635] U5130:  tmp2:= ZEROEXT_DSZ32(tmp1) 
[     0] U5131:  tmp12:= XOR_DSZ32(tmp14, tmp12) 
[1317639] U510a:  tmp14:= NOTAND_DSZ32(tmp4, tmp9) 
[1317650] U5120:  tmp15:= ADD_DSZ32(tmp12, tmp15) 
[     0] U5121:  tmp12:= ROR_DSZ32(tmp0, 0x00000002) 
[1317681] U5134:  tmp13:= ADD_DSZ32(tmp12, tmp13) 
[     0] U5135:  tmp0:= ADD_DSZ32(tmp13, tmp15) 
[1317697] U511c:  tmp8:= ZEROEXT_DSZ32(tmp4) 
[     0] U511d:  tmp12:= XOR_DSZ32(tmp14, tmp12) 
[1317739] U510e:  tmp15:= ADD_DSZ32(tmp15, tmp13) 
[1317834] U5112:  tmp15:= ADD_DSZ32(tmp14, tmp15) 
[1317917] U5114:  tmp14:= ROR_DSZ32(tmp4, 0x0000000b) 
[     0] U5115:  tmp12:= XOR_DSZ32(tmp14, tmp12) 
[1317983] U5106:  tmp11:= ZEROEXT_DSZ32() 
[1318082] U5124:  tmp3:= ZEROEXT_DSZ32(tmp2) 
[     0] U5125:  tmp12:= XOR_DSZ32(tmp14, tmp12) 
[1318155] U5128:  tmp13:= XOR_DSZ32(tmp14, tmp12) 
[     0] U5129:  tmp11:= ADD_DSZ32(0x00000004, tmp11) 
[1319281] U515e:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010,  , tmp4) 
[1319296] U5148:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018) 
[     0] U5149:  tmp9:= ADD_DSZ32(tmp9, tmp15) 
[1319311] U513a:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004) 
[1319337] U5142:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010) 
[1319393] U513e:  tmp2:= ADD_DSZ32(tmp2, tmp15) 
[1319432] U514c:  tmp10:= ADD_DSZ32(tmp10, tmp15) 
[     0] U514d: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U514e) !m2 SEQW GOTO U5159
[1319668] U5166:  tmp6:= SUB_DSZ32(0x00000001, tmp6) 
[1319682] U514a:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c) 
[1319694] U5138:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7) 
[     0] U5139:  tmp0:= ADD_DSZ32(tmp0, tmp15) 
[1319709] U5146:  tmp8:= ADD_DSZ32(tmp8, tmp15) 
[1319710] U5140:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c) 
[     0] U5141:  tmp3:= ADD_DSZ32(tmp3, tmp15) 
[1319755] U515a:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004,  , tmp1) 
[1319829] U513c:  tmp1:= ADD_DSZ32(tmp1, tmp15) 
[     0] U513d:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008) 
[1319923] U5144:  tmp4:= ADD_DSZ32(tmp4, tmp15) 
[     0] U5145:  tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014) 
[1319941] U515c:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008,  , tmp2) 
[     0] U515d:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c,  , tmp3) 
[1319972] U5158:  tmp10:= BSWAP_DSZ32(tmp10) 
[     0] U5159: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp0) 
[1320001] U5162:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c,  , tmp10) 
[1320093] U5160:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014,  , tmp8) 
[     0] U5161:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018,  , tmp9) 
[1320147] U5164:  tmp5:= PINTMOVDTMM2I_DSZ64(tmm0) 
[     0] U5165:  tmp5:= ADD_DSZ64(0x00000040, tmp5) 
[1320419] U5168:  UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp6, U5169) SEQW GOTO U50dd
[     0] U5169:  tmp11:= READURAM( , 0x0047, 64) 
check_rsa_pub_key_hash:
[1329774] U4644:  tmp0:= SUB_DSZ32(0x41b7b4a1, tmp0) 
[     0] U4645:  tmp1:= SUB_DSZ32(0xdbdc0f7f, tmp1) 
[1329993] U516e:  tmp15:= BTS_DSZ64(0x00000000, 0x0000001f) 
[1330005] U5174:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000038,  , 0x00000000) 
[     0] U5175:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000040,  , 0x00000000) 
[1330104] U5176:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000048,  , 0x00000000) 
[1330105] U5172:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000030,  , 0x00000000) 
[1330356] U516a:  UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U0011) 
[1330371] U517c:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000058,  , tmp15) SEQW GOTO U50e6
[     0] U517d:  tmp2:= AND_DSZ32(0x0000003f, tmp5) 
[1330375] U5178:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000050,  , 0x00000000) 
[     0] U5179:  tmp15:= PINTMOVDTMM2I_DSZ32(tmm7) 
[1330539] U516c:  tmp15:= SHR_DSZ32(tmp11, 0x00000010) 
[     0] U516d:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U0011) 
[1330548] U517a:  tmp15:= ROL_DSZ64(tmp15, 0x00000029) 
sha256_ret:
[     0] U0011:  tmp13:= READURAM( , 0x008e, 64) 
[1330772] U0012:  tmp14:= SHR_DSZ64(tmp13, 0x00000020) 
[1330894] U5170:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020,  , tmp15) 
[     0] U5171:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000028,  , 0x00000000) 
[1332263] U0016:  UJMP( , tmp11) 
[1332473] U0014:  tmp13:= MOVEINSERTFLGS_DSZ32(tmp14, tmp13) 
[     0] U0015:  tmp14:= READURAM( , 0x008d, 64) 
[1333199] U5154:  tmp4:= BSWAP_DSZ32(tmp4) 
[     0] U5155:  tmp8:= BSWAP_DSZ32(tmp8) 
gen_key_first_step:
[     0] U6161:  tmp6:= ZEROEXT_DSZ32(0x00000007) 
[1333282] U6162:  WRITEURAM(tmp6, 0x0048, 32) !m2 
[1333489] U514e:  tmp0:= BSWAP_DSZ32(tmp0) 
[1333627] U5156:  tmp9:= BSWAP_DSZ32(tmp9) 
[1333628] U4666:  tmp0:= ZEROEXT_DSZ32(0x00000018) 
[1333728] U4648:  tmp3:= SUB_DSZ32(0xb28fb7b5, tmp3) 
[     0] U4649:  tmp4:= SUB_DSZ32(0x3f1586cb, tmp4) 
[1333768] U4646:  tmp2:= SUB_DSZ32(0x6ea2ea0f, tmp2) 
[1333769] U4670:  tmp7:= ADD_DSZ64(0x00000040, tmp7) 
[     0] U4671:  tmp11:= ZEROEXT_DSZ16(0x00006161) 
[1333789] U5150:  tmp1:= BSWAP_DSZ32(tmp1) 
[     0] U5151:  tmp2:= BSWAP_DSZ32(tmp2) 
[1333875] U4660:  tmp1:= CONCAT_DSZ32(0x0ed17ed0, tmp1) 
[     0] U4661:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7,  , tmp0) 
[1333906] U465a:  CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000011, U5795) !m2 
gen_rc4_key:
[1333921] U465c:  tmp0:= ZEROEXT_DSZ32(0x0ed17ed0) 
[     0] U465d:  tmp0:= CONCAT_DSZ32(0x0ed17ed0, tmp0) 
[1333931] U4668: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp14, 0x00000060, mode=0x01, tmp0) 
[     0] U4669:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000010, tmp0, tmp1) 
[1334008] U4672:  WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50c4
[1334011] U466e:  tmp6:= ZEROEXT_DSZ32(0x00000001) 
[1334036] U4664:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000030,  , tmp0) 
[     0] U4665:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000038,  , tmp1) 
[1334107] U4658:  UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U5795) 
[     0] U4659:  tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000180) 
[1334148] U466c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U466d) SEQW GOTO U4668
[     0] U466d:  tmp5:= ADD_DSZ64(0x00000000, tmp7) 
[1334149] U4662:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008,  , tmp1) 
[1334189] U4656:  tmp0:= OR_DSZ32(tmp10, tmp0) 
[1334192] U5152:  tmp3:= BSWAP_DSZ32(tmp3) 
[1334208] U466a:  tmp0:= SUB_DSZ64(0x00000008, tmp0) 
[1334238] U464c:  tmp9:= SUB_DSZ32(0xae84cbf5, tmp9) 
[     0] U464d:  tmp10:= SUB_DSZ32(0x1d90453a, tmp10) 
[1334251] U464e:  tmp0:= OR_DSZ32(tmp1, tmp0) 
[1334296] U4652:  tmp0:= OR_DSZ32(tmp4, tmp0) 
[1334322] U4654:  tmp0:= OR_DSZ32(tmp8, tmp0) 
[     0] U4655:  tmp0:= OR_DSZ32(tmp9, tmp0) 
[1334380] U4650:  tmp0:= OR_DSZ32(tmp2, tmp0) 
[     0] U4651:  tmp0:= OR_DSZ32(tmp3, tmp0) 
[1334576] U465e:  tmp1:= ZEROEXT_DSZ32(0x0ed17ed0) 
[1334769] U464a:  tmp8:= SUB_DSZ32(0x0388e90c, tmp8) 
[1337054] U6168:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008,  , tmp2) 
[     0] U6169:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c,  , tmp3) 
[1337692] U616e:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c,  , tmp10) 
gen_key_step:
[     0] U57fd:  tmp6:= READURAM( , 0x0048, 64) 
[1337774] U57fe:  tmp6:= SUB_DSZ32(0x00000001, tmp6) 
[1337847] U616c:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014,  , tmp8) 
[     0] U616d:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018,  , tmp9) 
[1337886] U6174:  WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50da
[     0] U6175:  tmp10:= unk_6a0() 
[1337974] U6170:  tmp5:= SUB_DSZ64(0x00000040, tmp5) 
[     0] U6171:  tmp6:= ZEROEXT_DSZ32(0x00000001) 
[1338011] U6172:  tmp11:= ZEROEXT_DSZ16(0x000057fd) 
[1338133] U616a:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010,  , tmp4) 
[1338134] U6164:  tmp7:= ADD_DSZ64(0x00000020, tmp7) 
[     0] U6165:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp0) 
[1338477] U6166:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004,  , tmp1) 
[1341388] U5800:  WRITEURAM(tmp6, 0x0048, 32) !m2 
[     0] U5801:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U5802) SEQW GOTO U6164
[     0] U5d75:  tmp0:= ZEROEXT_DSZ32() 
[1361079] U5d76:  tmp1:= ZEROEXT_DSZ32() 
[1363385] U5806:  tmp0:= SUB_DSZ32(0x00000001, tmp0) 
[1363660] U5808:  UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U5d75) SEQW GOTO U5805
[     0] U5809:  tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
[1364133] U5802:  tmp7:= ADD_DSZ64(0x000000e0, tmp7) 
[1364226] U5804:  tmp0:= ZEROEXT_DSZ32(0x000000ff) 
[     0] U5805:  STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0, tmp0) 
[1365249] U5d80:  STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0, tmp3) 
[     0] U5d81:  STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1, tmp2) 
[1365282] U5d7a:  tmp1:= ADD_DSZ8(tmp2, tmp1) 
[1365344] U5d84:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U2b45) SEQW GOTO U5d78
[     0] U5d85:  tmp0:= ZEROEXT_DSZ32(IMM_MACRO_ALIAS_MSLOOPCTR) !m0 
[1365460] U5d82:  tmp0:= ADD_DSZ8(0x00000001, tmp0) 
[1365499] U5d7e:  tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1) 
[1365550] U5d7c:  tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0) 
[     0] U5d7d:  tmp1:= ADD_DSZ8(tmp2, tmp1) 
[1365649] U5d78:  tmp2:= ADD_DSZ64(0xfffffffffffffe40, tmp0) 
[     0] U5d79:  tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp2) 
rc4_decrypt:
[     0] U5ed5:  tmp0:= ADD_DSZ8(0x00000001, tmp0) 
[1366008] U5ed6:  tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0) 
[1366830] U2b44: LFNCEWAIT-> tmp3:= MOVE_DSZ32(0x00000003) SEQW GOTO U6536
[     0] U2b45:  tmp5:= SUB_DSZ64(0x00000200, tmp7) 
[1370447] U5ee4:  tmp5:= ADD_DSZ64(0x00000001, tmp5) 
[     0] U5ee5:  tmp6:= SUB_DSZ32(0x00000001, tmp6) 
[1370705] U2b48:  tmp0:= ZEROEXT_DSZ32() 
[     0] U2b49:  tmp1:= ZEROEXT_DSZ32() 
[1370718] U5eda:  STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0, tmp3) 
[1370735] U5edc:  STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1, tmp2) 
[     0] U5edd:  tmp2:= ADD_DSZ8(tmp3, tmp2) 
[1370791] U5ee2:  STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp5, mode=0x01,  , tmp3) 
[1371088] U2b4a:  tmp8:= MOVEMERGEFLGS_DSZ32(0x000007c4, tmp13) 
[1371131] U5ee6:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, tmp8) SEQW GOTO U5ed5
[1371236] U2b46:  tmp6:= ADD_DSZ32(0x00000200) 
[1371300] U2b4c:  tmp8:= CMOVCC_DSZ32_CONDB(tmp8, 0x000008c4) SEQW GOTO U5ed5
[     0] U2b4d:  tmp5:= AND_DSZ32(0x000000c0, tmp7) 
[1371319] U5ee0:  tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp5, mode=0x01) 
[     0] U5ee1:  tmp3:= XOR_DSZ8(tmp2, tmp3) 
[1371443] U5ede:  tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp2) 
[1371835] U5ed8:  tmp1:= ADD_DSZ8(tmp2, tmp1) 
[     0] U5ed9:  tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1) 
rc4_decrypt_ucode_first:
[1377756] U08c4:  tmp5:= ADD_DSZ64(0x00000284, tmp14) 
[     0] U08c5:  tmp6:= SUB_DSZ32(0x00000284, tmp13) 
[1380979] U08c6:  tmp8:= ZEROEXT_DSZ32(0x00000059) SEQW GOTO U5ed5
compute_ucode_sha_start:
[     0] U0059:  tmp7:= SUB_DSZ64(0x00000200, tmp7) 
[1683507] U005a:  tmp5:= ZEROEXT_DSZ64(tmp14) 
[1685667] U005e:  WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50c4
[1686384] U005c:  tmp6:= ZEROEXT_DSZ32(0x00000002) 
[     0] U005d:  tmp11:= ZEROEXT_DSZ16(0x00002a99) 
compute_ucode_sha_update:
[     0] U2a99:  tmp6:= SUB_DSZ32(0x00000284, tmp13) 
[1691672] U2a9a:  tmp6:= SHR_DSZ32(tmp6, 0x00000006) 
[1694966] U2a9e:  tmp11:= CONCAT_DSZ16(0x00000001, tmp11) 
[1695047] U2a9c:  tmp5:= ADD_DSZ64(0x00000284, tmp14) 
[     0] U2a9d:  tmp11:= ZEROEXT_DSZ32(0x000069b0) 
[1695071] U2aa0:  WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50da
[     0] U2aa1:  tmp1:= CONCAT_DSZ16(0xffffffffffffffff) 
compute_ucode_sha_end:
[2568685] U69b0:  tmp7:= ADD_DSZ64(0x00000020, tmp7) 
[     0] U69b1:  tmp5:= ADD_DSZ64(0x00000184, tmp14) 
rsa_decrypt_modular_multiplication:
[2569703] U735c:  WRITEURAM(tmp8, 0x0046, 64) !m2 
[     0] U735d:  tmp4:= ZEROEXT_DSZ64() 
[2573023] U69b2:  tmp6:= ADD_DSZ64(0x00000080, tmp14) 
[2573250] U69bc:  tmp11:= ADD_DSZ64(0x00000002, tmp11) 
[     0] U69bd:  tmm5:= unk_744(tmm3) 
[2573363] U69be:  tmm5:= unk_645(tmm5) 
[2573443] U69b8:  tmm1:= unk_645(tmm1) 
[     0] U69b9:  tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, 0x000000f8) 
[2573504] U69b6:  tmm1:= unk_744(mm0) 
[2573510] U69ba:  tmp11:= SHR_DSZ64(tmp11, 0x00000010) 
[2573540] U69b4:  unk_13f() !m2 
[     0] U69b5:  tmp0:= BTS_DSZ64(0x00000000, 0x00000020) 
[2573594] U69c0:  tmp12:= WRMSLOOPCTRFBR(0x0000001f) 
[     0] U69c1:  tmp0:= ZEROEXT_DSZ32() 
[2573616] U69cc:  tmp9:= ZEROEXT_DSZ32(0x00000004) 
[     0] U69cd:  tmp8:= ZEROEXT_DSZ32(0x00000100) 
[2573640] U69c6:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp0, tmp1) 
[2573642] U69c8:  tmp0:= ADD_DSZ64(0x00000008, tmp0) 
[     0] U69c9:  tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U69c4
[2573670] U69c4:  tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp0) 
[     0] U69c5:  tmp1:= unk_37f(tmp1) !m2 
[2573685] U69c2:  tmm5:= unk_6e6(tmm5, tmm1) 
[2573740] U7360:  tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp10, 0x000000fc) 
[     0] U7361:  tmp2:= ZEROEXT_DSZ64() 
[2573824] U736c:  tmp1:= SUB_DSZ32(0x00000001, tmp1) 
[     0] U736d:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U736e) SEQW GOTO U7364
[2573867] U7364:  tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp2) 
[     0] U7365:  tmp3:= IMUL64L_DSZ64(tmp8, tmp9) 
[2573867] U7368:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp3) 
[     0] U7369:  tmp2:= ADD_DSZ64(0x00000004, tmp2) 
[2574031] U69ce:  tmp8:= ADD_DSZ32(0x00000008, tmp8) 
[2574072] U735e:  WRITEURAM(tmp9, 0x002c, 32) !m2 
[2574115] U7362:  tmp1:= ZEROEXT_DSZ32(0x00000040) 
[2574130] U73a0:  tmp4:= SHR_DSZ64(tmp12, 0x00000020) 
[     0] U73a1:  tmp8:= ADD_DSZ64(tmp14, tmp8) 
[2574178] U7390:  tmp11:= CMOVCC_DSZ32_CONDZ(tmp11, 0xffffffffffffffff) 
[     0] U7391:  tmp8:= ZEROEXT_DSZ64() 
[2574213] U736a:  tmp4:= SHR_DSZ64(tmp3, 0x00000020) 
[2574219] U69ca:  tmp10:= ZEROEXT_DSZ64(tmp5) 
[2574225] U7394:  tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, 0xfffffffffffffffc, tmp3) 
[     0] U7395:  tmp3:= ADD_DSZ32(0x00000004, tmp3) 
[2574250] U73a6:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0xfffffffffffffffc, tmp3, tmp8) 
[2574274] U69d0:  SAVEUIP( , 0x00, U191a) SEQW GOTO U735c
[     0] U69d1:  tmp1:= SHR_DSZ64(tmp5, 0x00000020) 
[2574343] U7366:  tmp3:= ADD_DSZ64(tmp4, tmp3) 
[2574442] U7386:  tmp1:= IMUL64L_DSZ64(tmp1, tmp0) 
[2574475] U7396:  tmp1:= IMUL64L_DSZ64(tmp1, tmp0) 
[2574527] U73a4:  tmp4:= ADD_DSZ64(tmp1, tmp4) 
[     0] U73a5:  tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0xfffffffffffffffc, tmp3) 
[2574534] U7380:  tmm1:= unk_645(tmm1) 
[     0] U7381:  tmm1:= unk_6e1(tmm1, tmm5) 
[2574594] U736e:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp4) 
[2574644] U737e:  tmm1:= unk_744(tmm5) 
[2574652] U7392:  tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp3) 
[2574682] U737a:  tmp4:= IMUL64L_DSZ64(tmp1, tmp0) 
[2574699] U739c:  tmp8:= ZEROEXT_DSZ32(tmp1) 
[     0] U739d:  tmp14:= ZEROEXT_DSZ32(tmp12) 
[2574742] U73a2:  tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
[2574760] U7374:  tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x000000fc) 
[     0] U7375:  tmp1:= SHR_DSZ64(tmp1, 0x00000010) 
[2574760] U737c:  tmp4:= SHR_DSZ64(tmp4, 0x00000030) 
[     0] U737d:  tmp13:= ADD_DSZ64(tmp4, tmp13) 
[2574766] U7384:  tmp13:= PINTMOVDTMM2I_DSZ64(tmm1) 
[     0] U7385:  tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5) 
[2574767] U738a:  tmp4:= SHR_DSZ64(tmp1, 0x00000020) 
[2574781] U7378: LFNCEWAIT-> tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp10, tmp2) 
[     0] U7379:  tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, 0x000000fc) 
[2574783] U73a8:  tmp9:= AND_DSZ32(tmp11, tmp9) 
[     0] U73a9:  tmp4:= ADD_DSZ64(tmp9, tmp4) 
[2574796] U739e:  tmp8:= ADD_DSZ64(tmp4, tmp8) 
[2574818] U7388:  tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7) 
[     0] U7389:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp1) 
[2574825] U7382:  tmm1:= unk_6c2( , tmm1) 
[2574840] U738c:  tmp4:= ADD_DSZ64(tmp3, tmp4) 
[     0] U738d:  tmp3:= ZEROEXT_DSZ32(0x00000004) 
[2574863] U7372:  tmp13:= SHL_DSZ64(tmp4, 0x00000030) 
[2574875] U738e:  tmp11:= SHR_DSZ64(tmp13, 0x00000020) 
[2574894] U739a:  tmp4:= ADD_DSZ64(tmp8, tmp4) 
[2574898] U7370:  tmp4:= ZEROEXT_DSZ64() 
[     0] U7371:  tmp2:= ZEROEXT_DSZ64(0x000000f8) 
[2574963] U7376:  tmp13:= ADD_DSZ64(tmp1, tmp13) 
[2575068] U7398:  tmp14:= ZEROEXT_DSZ32(tmp13) 
[     0] U7399:  tmp12:= IMUL64L_DSZ64(tmp9, tmp14) 
[2575075] U73aa:  tmp8:= SHR_DSZ64(tmp8, 0x00000020) 
[2575311] U73ac:  tmp4:= ADD_DSZ64(tmp1, tmp4) 
[     0] U73ad:  BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000008, U73ae) !m1,m2 SEQW GOTO U7392
[2575597] U73b2:  tmp12:= IMUL64L_DSZ64(tmp9, tmp14) 
[2575629] U73c4:  tmp2:= SUB_DSZ32(0x00000004, tmp2) 
[     0] U73c5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp2, U73c6) SEQW GOTO U7372
[2575807] U73b0:  tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, 0x000000fc) 
[     0] U73b1:  tmp14:= ZEROEXT_DSZ32(tmp13) 
[2575827] U73bc:  tmp4:= ADD_DSZ64(tmp9, tmp4) 
[     0] U73bd:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp3, tmp8) 
[2575975] U73c0:  tmp4:= ADD_DSZ64(tmp8, tmp4) 
[     0] U73c1:  tmp4:= XOR_DSZ64(tmp13, tmp4) 
[2575992] U73b8:  tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp3) 
[     0] U73b9:  tmp4:= ADD_DSZ64(tmp12, tmp4) 
[2576013] U73b4:  tmp8:= ZEROEXT_DSZ32(tmp12) 
[     0] U73b5:  tmp8:= ADD_DSZ64(tmp8, tmp4) 
[2576134] U73be:  tmp8:= SHR_DSZ64(tmp8, 0x00000020) 
[2576196] U73b6:  tmp12:= SHR_DSZ64(tmp12, 0x00000020) 
[2576262] U73ae:  tmp4:= ADD_DSZ64(tmp8, tmp4) 
[2576483] U73ba:  tmp9:= AND_DSZ32(tmp11, tmp9) 
[2576571] U73c2:  tmp4:= AND_DSZ64(0x00000001, tmp4) 
[     0] U1919: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp5, 0x7ff, tmp1) !m2 SEQW GOTO U60d2
rsa_call_decypt:
[2670992] U191a:  tmp10:= ZEROEXT_DSZ64(tmp7) 
[2673338] U73c8:  tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x000000fc) 
[     0] U73c9:  tmp1:= SHR_DSZ64(tmp1, 0x00000010) 
[2673363] U73ca:  tmp13:= ADD_DSZ64(tmp1, tmp13) 
[2673423] U73e4:  tmp4:= ADD_DSZ64(tmp12, tmp4) 
[     0] U73e5:  tmp9:= CMOVCC_DSZ64_CONDZ(tmp11, tmp9) 
[2673520] U73d6:  tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, tmp2) 
[2673557] U73d0:  tmm1:= unk_6c2( , tmm1) 
[     0] U73d1:  tmp13:= PINTMOVDTMM2I_DSZ64(tmm1) 
[2673657] U73d4:  tmp4:= ZEROEXT_DSZ64() 
[     0] U73d5:  tmp2:= ZEROEXT_DSZ32() 
[2673722] U73cc:  tmm1:= unk_744(tmm5) 
[     0] U73cd:  tmm1:= unk_645(tmm1) 
[2673799] U73de:  tmp12:= ADD_DSZ64(tmp4, tmp12) 
[2673804] U73d8:  tmp1:= ZEROEXT_DSZ32(tmp13) 
[     0] U73d9:  tmp8:= IMUL64L_DSZ64(tmp1, tmp9) 
[2673850] U73d2:  tmp11:= SHR_DSZ64(tmp13, 0x00000020) 
[2673858] U73e2:  tmp4:= SHR_DSZ64(tmp8, 0x00000020) 
[2673865] U73e0:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp12) 
[     0] U73e1:  tmp12:= SHR_DSZ64(tmp12, 0x00000020) 
[2673868] U73c6:  tmp13:= SHL_DSZ64(tmp4, 0x00000030) 
[2673879] U73ce:  tmm1:= unk_6e1(tmm1, tmm5) 
[2673926] U73e8:  tmp2:= ADD_DSZ32(0x00000004, tmp2) 
[     0] U73e9:  BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000008, U73ea) !m1,m2 SEQW GOTO U73d6
[2673945] U73e6:  tmp4:= ADD_DSZ64(tmp9, tmp4) 
[2674001] U73dc:  tmp12:= ZEROEXT_DSZ32(tmp8) 
[     0] U73dd:  tmp12:= ADD_DSZ64(tmp1, tmp12) 
[2674129] U73da:  tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2) 
[2674630] U7416:  tmp8:= READURAM( , 0x0046, 64) 
[2674649] U7418:  tmp9:= READURAM( , 0x002c, 64) 
[     0] U7419:  tmp9:= ZEROEXT_DSZ32(tmp9) SEQW URET0
[2674883] U191c:  tmp5:= ZEROEXT_DSZ64(tmp7) 
[     0] U191d:  tmp7:= ADD_DSZ64(tmp8, tmp7) 
[2674896] U1920:  tmp9:= SUB_DSZ32(0x00000001, tmp9) 
[     0] U1921:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1922) SEQW GOTO U69d0
[2675118] U73f0:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp4) 
[     0] U73f1:  UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U73fc) 
[2675347] U73ec:  tmp4:= ADD_DSZ64(tmp4, tmp1) 
[     0] U73ed:  tmp4:= XOR_DSZ64(tmp13, tmp4) 
[2675385] U73ee:  tmp4:= AND_DSZ64(0x00000001, tmp4) 
[2675449] U191e:  tmp8:= SUB_DSZ64(tmp8) 
[2675455] U73fa:  UJMPCC_DIRECT_NOTTAKEN_CONDLE(tmp1, U73fc) SEQW GOTO U7416
[2675533] U73f2:  tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, 0xfffffffffffffffc, tmp2) 
[2675551] U73ea:  tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2) 
[2675684] U73f8:  tmp1:= ADD_DSZ64(tmp1, tmp9) 
[     0] U73f9:  tmp1:= SUB_DSZ64(tmp1, 0xffffffffffffffff) 
[2675717] U73f6:  tmp1:= MOVSX_SSZ32_DSZ64(tmp1) 
[2676068] U73f4:  tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0xfffffffffffffffc, tmp2) 
[     0] U73f5:  tmp9:= MOVSX_SSZ32_DSZ64(tmp9) 
[2775123] U7404:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2, tmp0) 
[     0] U7405:  tmp2:= ADD_DSZ64(0x00000008, tmp2) 
[2775499] U7406:  tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U7400
[2775699] U740c:  tmp2:= ZEROEXT_DSZ32() 
[     0] U740d:  unk_13f() !m2 
[2775794] U7402:  tmp0:= unk_37e(tmp9, tmp1) !m2 
[2775826] U7412:  STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2, tmp0) 
[2775963] U7408:  UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U7416) 
[     0] U7409:  UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U7416) 
[2775997] U7410:  tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2) 
[     0] U7411:  tmp0:= unk_37f(tmp9, tmp1) !m2 
[2776038] U73fc:  tmp12:= WRMSLOOPCTRFBR(0x0000001f) 
[     0] U73fd:  tmp2:= ZEROEXT_DSZ32() 
[2776178] U7414:  tmp2:= ADD_DSZ64(0x00000008, tmp2) 
[     0] U7415:  tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U740e
[2776309] U740e:  tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp2) 
[2776410] U73fe:  unk_13f() !m2 
[2776560] U7400:  tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp2) 
[     0] U7401:  tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2) 
[2776658] U740a:  tmp12:= WRMSLOOPCTRFBR(0x0000001f) 
[2979673] U1922:  tmp10:= ADD_DSZ64(0x00000104, tmp6) 
[2979814] U1924:  SAVEUIP( , 0x00, U2d72) SEQW GOTO U735c
[     0] U1925:  tmp0:= READURAM( , 0x0053, 64) 
[     0] U2d71:  MOVEINSERTFLGS_DSZ32(0x00000008) !m2 SEQW GOTO U17ec
check_rsa_padding_signature_and_patch:
[3074954] U2d72:  tmp13:= READURAM( , 0x008e, 64) 
rsa_signing_error:
[     0] U5795:  tmp15:= STC() 
[3074993] U5796:  tmp2:= READURAM( , 0x005c, 64) 
[     0] U5a0d:  tmp11:= ZEROEXT_DSZ32(0x00000006) 
[3075786] U5a0e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U27dc) 
ucode_update_invalid:
[3076086] U27dc:  tmp11:= CONCAT_DSZ16(0x00000100, tmp11) 
[     0] U27dd:  WRITEURAM(tmp11, 0x000e, 32) 
[     0] U3dc1:  NOP SEQW GOTO U2d95
[3076393] U3dc2:  MOVE_DSZ32() 
[3076533] U3de4: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U3de1) !m1,m2 
[     0] U3de5:  tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
[3077173] U205c:  tmp1:= ZEROEXT_DSZ32(0x60000000) 
[     0] U205d:  tmp2:= ZEROEXT_DSZ32(0x00000005) 
[3078323] U579a:  tmp2:= ADD_DSZ32(0x00000084, tmp2) 
[3078449] U579e:  tmp7:= ADD_DSZ64(0x00000004, tmp7) 
[3078643] U579c:  STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000040,  , 0x00000000) 
[     0] U579d:  tmp2:= SUB_DSZ32(0x00000001, tmp2) 
[3078913] U57a0:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U5a0d) SEQW GOTO U579c
[     0] U57a1:  tmp15:= READURAM( , 0x0053, 64) !m2 
[3078978] U2d78:  tmp0:= ZEROEXT_DSZ64(0xffffffffffffff00) 
[     0] U2d79:  tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020) 
[3079272] U2d7a:  CMPUJNZ_DIRECT_NOTTAKEN(tmp5, U5795, tmp0) !m2 
[3079298] U2d76:  tmp14:= READURAM( , 0x008d, 64) 
[3079331] U2d74:  tmp14:= SHR_DSZ64(tmp13, 0x00000020) 
[     0] U2d75:  tmp13:= MOVEINSERTFLGS_DSZ32(tmp14, tmp13) 
[3079710] U5798:  tmp2:= BT_DSZ32(tmp2, 0x00000003) 
[     0] U5799:  tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0xfffffffffffffff8) 
[3079717] U3dc4:  WRITEURAM(tmp14, 0x0047, 32) !m2 
[     0] U3dc5:  WRITEURAM(tmp14, 0x0007, 32) !m2 
[3079822] U3dcc:  tmp2:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
[     0] U3dcd:  tmp2:= AND_DSZ32(0x0000008a, tmp2) 
[3079943] U3de6:  tmp2:= OR_DSZ32(tmp8, tmp2) 
[3080013] U3dc8:  tmp2:= READURAM( , 0x005c, 64) 
[     0] U3dc9:  BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000010, U6eec) !m1 
[3080082] U3de8:  tmp10:= AND_DSZ32(0x000f0000, tmp2) 
[     0] U3de9:  tmp14:= ZEROEXT_DSZ32(0x000061e6) SEQW GOTO U3dc2
[3080160] U3dce: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x38f, 32) !m1 
[3080190] U3dca:  SAVEUIP_REGOVR(0x01, U3dcc, 0x0008) !m0 SEQW GOTO U2b15
[3080253] U27de:  tmp8:= TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U3de5
[3080322] U3dd4: SYNCFULL-> MOVETOCREG_DSZ64(tmp8, 0x281, 32) !m1 
[     0] U3dd5:  tmp14:= ZEROEXT_DSZ32(0x00006ec4) SEQW GOTO U205c
[3080394] U3dc6:  SAVEUIP_REGOVR(0x01, U3dc8, 0x0008) !m0 SEQW GOTO U32cd
[3080516] U3dd0: LFNCEWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 
[     0] U3dd1:  tmp8:= OR_DSZ32(0x000f0000, tmp8) 
[3080595] U205e:  tmp3:= ZEROEXT_DSZ32(0x00000040) SEQW GOTO U1ac9
[3080648] U3dd2:  NOP 
FUN_ucode_0006ec4:
[3842255] U6ec4:  tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001c0) 
[     0] U6ec5:  SAVEUIP_REGOVR(0x01, U6ec6, 0x0008) !m0 SEQW GOTO U32cd
FUN_ucode_0000164:
[3843257] U0164:  unk_dff() 
[     0] U0165: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000008, 0x63a) 
[     0] U2d0d:  tmp14:= ZEROEXT_DSZ32(0x000024e1) SEQW GOTO U54b4
[3843592] U2d0e:  tmp8:= MOVEFROMCREG_DSZ64( , 0x102) 
[3843693] U6c60:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmpv0, U6c66) 
[     0] U6c61:  tmpv0:= MOVEFROMCREG_DSZ64( , 0x102) 
[3844248] U5ca8:  tmpv1:= MOVEMERGEFLGS_DSZ32(0x00000001, tmpv1) 
[     0] U5ca9:  tmpv0:= CMOVCC_DSZ32_CONDNB(tmpv1, tmpv0) 
thunk_FUN_ucode_0002712:
[3844582] U4084:  SAVEUIP( , 0x01, U5b25) !m0 SEQW GOTO U2712
[     0] U4085:  NOP 
[     0] U0c75:  tmp14:= READURAM( , 0x0047, 64) 
[3845090] U0c76:  tmp3:= ZEROEXT_DSZ32() SEQW GOTO U4bf5
[3846283] U6ed0:  MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x7f6) 
[     0] U6ed1:  tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000200) 
[3846304] U6ed2:  MOVETOCREG_DSZ64(tmp8, 0x3f0, 32) !m1 
[3846368] U6ee4:  tmp0:= ZEROEXT_DSZ32(0x00000080) 
[     0] U6ee5:  tmp1:= ZEROEXT_DSZ32(0x000002df) 
[3846406] U6ece:  tmp7:= MOVETOCREG_OR_DSZ64(tmp7, 0x692, tmp8) 
[3846467] U6edc:  MOVETOCREG_DSZ64(tmp1, 0x575) 
[     0] U6edd:  tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000c0) 
[3846640] U6ede:  MOVETOCREG_DSZ64(tmp1, 0x562) 
[3846677] U6ed8:  tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000080) 
[     0] U6ed9:  MOVETOCREG_DSZ64(tmp1, 0x574) 
[3846694] U6ec6:  MOVETOCREG_DSZ64(tmp2, 0x383, 32) !m1 
[3846713] U6ee6:  SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U6ee8SEQW GOTO U17f6
[3846718] U6ecc:  tmp7:= MOVEFROMCREG_DSZ64( , 0x692) 
[     0] U6ecd:  tmp7:= NOTAND_DSZ64(0x00000100, tmp7) 
[3846774] U6ee0:  tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000e0) 
[     0] U6ee1:  MOVETOCREG_DSZ64(tmp1, 0x563) 
[3846873] U6ef4:  tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
[     0] U6ef5:  MOVETOCREG_BTR_DSZ64(tmp8, 0x51b) 
[3846891] U6eda:  tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000a0) 
[3846892] U6ec8:  tmp2:= MOVETOCREG_SHR_DSZ64(tmp2, 0x00000008, 0x384) !m1 
[     0] U6ec9:  tmp2:= MOVETOCREG_SHR_DSZ64(tmp2, 0x00000008, 0x10c) 
[3846966] U6eec:  MOVETOCREG_BTS_DSZ64( , 0x0000001f, 0x29d) !m0,m1 
[     0] U6eed:  MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
[3846999] U6ee2:  SAVEUIP_REGOVR(0x01, U6ee4, 0x0008) !m0 SEQW GOTO U2b15
[3847038] U6eca:  tmp8:= AND_DSZ64(0x00000100, tmp2) 
[3847209] U6ed6:  MOVETOCREG_SHR_DSZ64(tmp8, 0x00000018, 0x3f3) !m1 
[3847209] U6efa:  tmp8:= BT_DSZ32(tmp8, 0x00000007) 
[3847233] U6ef0:  tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001a0) 
[     0] U6ef1:  unk_13f(tmp8) !m2 
[3847282] U6ef8:  TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U283a
[     0] U6ef9:  tmp8:= READURAM( , 0x005c, 64) 
[3847288] U6ed4:  MOVETOCREG_SHR_DSZ64(tmp8, 0x00000008, 0x3f1) !m1 
[     0] U6ed5:  MOVETOCREG_SHR_DSZ64(tmp8, 0x00000010, 0x3f2) !m1 
[3847294] U6ef2:  MOVETOCREG_DSZ64(tmp8, 0x7fe) 
[3847343] U6eea:  MOVETOCREG_DSZ64(tmp8, 0x104) 
[3847441] U2826:  tmp0:= READURAM( , 0x004f, 64) 
[3847494] U2834: ROVR<- tmp1:= OR_DSZ64(0x00000001, tmp1) SEQW SAVEUIP0 U2835SEQW GOTO U4084
[     0] U2835:  tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
[3847511] U282e: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp1, 0x517, tmp2) SEQW SAVEUIP1 U2830SEQW GOTO U0164
[3847517] U5cac: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000002, tmpv0) !m2 SEQW URET0
[     0] U5cad:  rdi:= READURAM( , 0x0022, 64) !m2 SEQW GOTO U217c
[3847565] U6ef6:  tmp12:= READURAM( , 0x0047, 64) 
[3847619] U6ee8:  MOVETOCREG_SHR_DSZ64(tmp8, 0x00000020, 0x39e) !m1 
[     0] U6ee9:  tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001e0) 
[3847702] U6c7a:  tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 
[3847706] U2828:  tmp1:= MOVEFROMCREG_DSZ64( , 0x516) 
[     0] U2829:  tmp2:= AND_DSZ64(0xffffffff, tmp0) 
[3847732] U6c72:  tmpv1:= MOVEFROMCREG_DSZ64( , 0x575) 
[3847804] U6c6a:  tmpv1:= MOVEFROMCREG_DSZ64( , 0x575) 
[3847806] U282a:  MOVETOCREG_OR_DSZ64(tmp1, 0x516, tmp2) 
[3847806] U6eee: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
[3847840] U6c70:  tmpv1:= AND_DSZ64(tmpv1, tmpv2) 
[     0] U6c71:  tmpv0:= SUB_DSZ64(tmpv1, tmpv0) 
[3847846] U2832:  tmp1:= MOVEFROMCREG_DSZ64( , 0x7f0) 
FUN_ucode_0006c66:
[3847856] U6c66:  tmpv0:= NOTAND_DSZ64(tmpv3, tmpv2) 
[3847872] U6c74:  tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000400) 
[     0] U6c75:  tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
[3847872] U6efc:  tmp8:= MOVEMERGEFLGS_DSZ32(0x00000c75, tmp8) 
[     0] U6efd:  tmp12:= CMOVCC_DSZ32_CONDB(tmp8, tmp12) SEQW GOTO U2825
[3847882] U6c62:  tmpv0:= SHR_DSZ64(tmpv0, 0x00000020) 
[3847904] U6c78:  tmpv0:= MOVEFROMCREG_DSZ64( , 0x572) 
[     0] U6c79:  tmpv1:= MOVEFROMCREG_DSZ64( , 0x573) 
[3847925] U2d10:  tmp8:= ZEROEXT_DSZ32(tmp8) 
[     0] U2d11:  tmp1:= ADD_DSZ32(0x00000001, tmp8) 
[3848005] U6c84:  tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
[     0] U6c85: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmpv0, U2b31) SEQW URET1
[3848023] U6c80:  tmpv0:= SUB_DSZ64(tmpv1, tmpv0) 
[     0] U6c81:  tmpv1:= MOVEFROMCREG_DSZ64( , 0x573) 
[3848030] U6c6e:  tmpv0:= AND_DSZ64(tmpv1, tmpv0) 
[3848031] U2d14:  tmp10:= SELECTCC_DSZ64_CONDZ(tmp1, 0x00000010) 
[     0] U2d15:  tmp1:= READURAM( , 0x0010, 64) 
[3848048] U6c76:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmpv0, U2b31) 
[3848057] U6c82:  tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000800) 
[3848074] U2d1c:  SAVEUIP_REGOVR( , 0x01, U2d1d, 0x8321) !m0 SEQW GOTO U6c61
[     0] U2d1d:  tmp1:= MOVEFROMCREG_DSZ64( , 0x0b1) 
[3848102] U6c6c:  tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 
[     0] U6c6d:  tmpv1:= AND_DSZ64(tmpv3, tmpv1) 
[3848199] U2d1a:  tmp3:= MOVEFROMCREG_DSZ64( , 0x101) 
[3848215] U6c64:  tmpv0:= AND_DSZ32(tmpv0, tmpv3) 
[     0] U6c65:  UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U2b31) 
[3848269] U5caa:  tmpv0:= OR_DSZ32(0x000000b4, tmpv0) 
[3848282] U6c7e:  tmpv1:= AND_DSZ64(tmpv1, tmpv2) 
[3848304] U2d2e: SYNCFULL-> UFLOWCTRL( , tmp14, URET1) SEQW GOTO U5e06
[3848312] U2830:  BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2831) !m1 SEQW GOTO U283a
[     0] U2831:  tmp13:= READUIP_REGOVR(0x00) 
[3848315] U2d12:  tmp1:= AND_DSZ32(tmp1, tmp8) 
[3848315] U2d1e: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp1, 0x0b1, tmp10) !m2 
[3848370] U6c7c:  tmpv1:= AND_DSZ64(tmpv3, tmpv1) 
[     0] U6c7d:  tmpv0:= AND_DSZ64(tmpv1, tmpv0) 
[3848374] U2d2c:  tmp1:= READUIP_REGOVR(0x01) !m0 
[     0] U2d2d:  tmp14:= ZEROEXT_DSZ16(tmp14, tmp1) 
[3848380] U282c:  tmp1:= MOVEFROMCREG_DSZ64( , 0x517) 
[     0] U282d:  tmp2:= SHR_DSZ64(tmp0, 0x00000020) 
[3848412] U0166:  MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0 SEQW GOTO U27ae
[3848446] U6c68:  UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U2b31) 
FUN_ucode_0006c69:
[     0] U6c69:  tmpv0:= MOVEFROMCREG_DSZ64( , 0x574) 
[3848465] U2d16:  tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
[3848517] U2d22:  SAVEUIP_REGOVR( , 0x00, U2d24, 0x8321) SEQW GOTO U5c9e
[3848530] U2d24:  tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 
[     0] U2d25: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp2, 0x00000002, 0x6c3) !m0,m2 
[3848552] U2d28:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U06ad) 
[     0] U2d29:  tmp8:= TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U2d2c
[3848553] U2d20: LFNCEWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x0b1) 
[     0] U2d21:  MOVETOCREG_DSZ64(tmp5, 0x7f0) !m2 
[3848746] U2d18:  tmp8:= CONCAT_DSZ32(tmp1, tmp8) 
[     0] U2d19:  tmp8:= NOTAND_DSZ64(tmp8, 0xffffffffffffffff) 
[3848935] U2d26:  tmp1:= SHR_DSZ64(tmp8, 0x00000020) 
[3849002] U2838:  MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x0b5) !m2 
[     0] U2839:  NOP 
[3849123] U2d2a:  tmp8:= MOVEINSERTFLGS_DSZ32(0x00000001, tmp8) 
[3849265] U283a:  UJMP( , tmp12) 
[3849456] U2836:  AETTRACE( , tmp1, 0x0e) 
[     0] U61e5:  tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c) SEQW GOTO U0011
[3863871] U61e6:  tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
[     0] U2bc5:  STADSTGBUF_DSZ64_ASZ16_SC1(0x00000100,  , tmp0) SEQW URET0
[3864292] U2bc6:  TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U5d14
[     0] U60a9: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001dc, tmp9, tmp4) SEQW GOTO U4e82
FUN_ucode_00060aa:
[3864651] U60aa:  tmp1:= READURAM( , 0x0053, 64) !m2 
[3866698] U61f4:  tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
[     0] U61f5:  tmp2:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
[3867437] U61f2:  tmp0:= ZEROEXT_DSZ32(0x00000011) 
[3867616] U60ae:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U304e) SEQW SAVEUIP1 U60b0SEQW GOTO U0bc9
[3867894] U61f0:  tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
[     0] U61f1:  CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000000, U3be4) !m1,m2 
[3867925] U61f8:  tmp14:= READURAM( , 0x000d, 64) 
[     0] U61f9:  tmp14:= ZEROEXT_DSZ16(tmp14) SEQW GOTO U0414
[3867988] U61ee:  tmp0:= ZEROEXT_DSZ32(0x00000012) 
[3868051] U61f6: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000f, U3be4) !m0,m1,m2 
[3868102] U60ac:  tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
[     0] U60ad:  tmp7:= SUB_DSZ64(0x00000000, tmp1) 
[3868211] U61ea:  tmp0:= READURAM( , 0x005c, 64) 
[3868310] U61e8:  tmp2:= AND_DSZ32(0x00070000, tmp2) 
[     0] U61e9:  tmp2:= OR_DSZ32(tmp10, tmp2) 
[3868580] U2bc8:  PORTOUT_DSZ32_ASZ16_SC1(0x0010,  , 0x00000000) !m2 
[     0] U2bc9:  tmp0:= ZEROEXT_DSZ32(0x00000002) SEQW SAVEUIP0 U2bcaSEQW GOTO U60aa
[3868698] U61ec:  tmp0:= BT_DSZ64(tmp0, 0x00000010) 
[     0] U61ed:  tmp2:= SELECTCC_DSZ32_CONDB(tmp0, tmp2) 
[3871355] U60b0:  tmp7:= unk_222(tmp1) 
[     0] U60b1:  tmp7:= CONCAT_DSZ16(tmp7, tmp7) 
[3871909] U60b4:  PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp7) !m2 
[     0] U60b5: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0064,  , tmp1) !m2 
[3871944] U60b2:  tmp7:= unk_0fc(tmp0, tmp7) 
[3872442] U60b6:  PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 
[3887611] U27f8:  BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U65f2) !m0,m1 SEQW GOTO U21fe
[     0] U27f9:  tmp0:= READURAM( , 0x0053, 64) 
[     0] U21fd:  MOVETOCREG_DSZ64(tmp9, 0x48c) !m2 
[3888767] U21fe: SYNCFULL-> NOP SEQW GOTO U17ec
[3888784] U2bcc:  NOP SEQW SAVEUIP1 U2bcdSEQW GOTO U0bc9
[     0] U2bcd:  PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , 0x00000000) !m2 
[3889056] U2bca:  SAVEUIP( , 0x00, U27f9) 
[3891594] U2bce:  PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 
[3891715] U27fe:  WRITEURAM( , 0x00000000, 0x0053, 64) !m2 
[3891882] U27fa:  tmp3:= ZEROEXT_DSZ32(0x000021fe) 
[3892273] U27fc:  WRITEURAM( , 0x00000000, 0x000d, 32) 
[     0] U27fd:  BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U2081) !m0,m1 
[3892968] U2bd0:  PORTOUT_DSZ32_ASZ16_SC1(0x0050,  , 0x00000000) !m2 SEQW URET0
FUN_ucode_0002bd1:
[     0] U2bd1:  TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U24d2
[3892988] U2800: SYNCFULL-> UJMP( , tmp3) 
[     0] U2801:  BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x00000000, U2804) !m1 
[3908931] U3a80:  unk_eff() 
[     0] U3a81: LFNCEWAIT->MSSTOP-> unk_256() !m1 SEQW GOTO U3dfa
[     0] U3df9: MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 
check_cpl_uend3:
[3909852] U3dfa:  tmp0:= PSELECT_CPL0( , 0x00000001) 
[3914037] U3dfc:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U06e6) 
[     0] U3dfd: LFNCEWAIT-> NOP SEQW UEND3
