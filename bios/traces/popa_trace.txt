[   149] U2768: MSSTOP-> NOP 
generate_#UD:
[     0] U2769:  SIGEVENT( , 0x00000019) SEQW GOTO U079d
[   177] U201a:  tmp13:= AND_DSZ32(0x000000fc, tmp6) 
[   179] U2018:  tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
[     0] U2019:  tmp14:= SAVEUIP(0x01, U1e38) !m0 
[   179] U201e:  tmp15:= NOTAND_DSZ32(tmp15, 0x00010000) SEQW GOTO U608c
[   180] U608c:  tmp13:= OR_DSZ32(tmp15, tmp13) 
[     0] U608d:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U608e) SEQW GOTO U040c
[   181] U040c:  tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 
[     0] U040d:  tmp9:= BT_DSZ32(tmp13, 0x00000011) 
[   181] U201c:  tmp13:= SUB_DSZ32(0x00000014, tmp13) 
[     0] U201d:  tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
[   182] U040e:  tmp9:= SELECTCC_DSZ32_CONDB(tmp9, 0x00010000) SEQW GOTO U3136
[     0] U3135:  tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 
[   183] U3136:  tmp15:= READUIP_REGOVR(0x01) !m0 
[   185] U313a:  tmp15:= SUB_DSZ32(0x00000001, tmp15) 
[   185] U313e: LFNCEWTMRK-> tmp13:= SIGEVENT(tmp13, 0x00000003) SEQW URET1
[   186] U3138:  tmp14:= CONCAT_DSZ32(tmp14, tmp15) 
[     0] U3139:  tmp15:= AND_DSZ32(0x0000003f, tmp13) 
[   186] U313c:  tmp15:= SUB_DSZ32(0x0000003d, tmp15) 
[     0] U313d:  UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp15, U37f4) 
[   191] U1e3a:  tmp0:= ZEROEXT_DSZ32(tmp11) 
[   192] U1e3c:  tmp13:= MOVEFROMCREG_DSZ64( , 0x701) 
[     0] U1e3d: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp13, 0x0000000e, 0x701) !m0 
[   193] U1e38:  tmp7:= MOVEFROMCREG_DSZ64( , 0x004) 
[     0] U1e39:  tmp14:= ZEROEXT_DSZ32(tmp13) 
[   201] U1e3e:  MOVETOCREG_BTR_DSZ64(tmp7, 0x00000005, 0x004) 
[   204] U1e40:  tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
[     0] U1e41:  tmp10:= READAFLAGS( , tmp10) !m2 SEQW SAVEUIP0 U1e42SEQW GOTO U6a56
[     0] U6a55:  BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000011, U73ae) !m1,m2 SEQW GOTO U4f60
[   207] U6a56:  tmp4:= SHR_DSZ32(tmp14, 0x0000000d) 
[   208] U6a58:  tmp2:= AND_DSZ16(0xfffffffffffffffc, tmp2) 
[     0] U6a59:  tmp4:= AND_DSZ32(0x00000003, tmp4) 
[   208] U6a5a:  tmp2:= OR_DSZ16(tmp4, tmp2) 
[   209] U6a5c:  tmp4:= AND_DSZ32(0x00000001, tmp4) 
[     0] U6a5d:  tmp1:= AND_DSZ32(0x00000003, tmp6) 
[   209] U6a5e:  tmp1:= SHL_DSZ32(tmp1, 0x00000004) 
[   210] U6a60:  tmp4:= MOVEINSERTFLGS_DSZ64(tmp1, tmp4) 
[     0] U6a61:  tmp2:= MOVEINSERTFLGS_DSZ64(tmp1, tmp2) 
[   211] U6a62:  tmp3:= CMOVCC_DSZ32_CONDS(tmp4, tmp0) 
[   211] U6a64:  tmp3:= CMOVCC_DSZ32_CONDNO(tmp2, tmp3) 
[     0] U6a65:  tmp1:= MOVEMERGEFLGS_DSZ32(0x00000003, tmp1) 
[   211] U6a66:  tmp1:= CMOVCC_DSZ32_CONDZ(tmp1, 0x0000000b) 
[   212] U6a68:  tmp2:= AND_DSZ32(0x000000fc, tmp6) 
[     0] U6a69:  tmp2:= SHR_DSZ32(tmp2, 0x00000002) 
[   212] U6a6a:  tmp1:= CONCAT_DSZ8(tmp1, tmp2) 
FUN_ucode_0001894:
[   213] U1894:  tmp13:= TESTUSTATE(tmp3, SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET0
[     0] U1895:  tmp3:= READURAM( , 0x0014, 64) 
[   213] U1e42: LFNCEMARK-> tmp8:= NOTAND_DSZ32(tmp7, 0x00000003) 
[   213] U6a6c:  TESTUSTATE( , SYS, UST_SMM | 0x2000) !m1 ? SEQW GOTO U1894
[     0] U6a6d:  tmp13:= READUIP_REGOVR(0x00) 
[     0] U19fd:  tmp6:= SHL_DSZ32(tmp3, 0x00000005) SEQW GOTO U1e64
[   214] U19fe:  tmpv1:= ZEROEXT_DSZ32(0x00000502) 
[   214] U1a00:  TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U1db2
[     0] U1a01:  tmpv0:= READURAM( , 0x0012, 64) 
[   214] U1e44:  SAVEUIP_REGOVR( , 0x01, U1e45, 0x540c) !m0 SEQW GOTO U19fe
[     0] U1e45:  tmp13:= CMOVCC_DSZ32_CONDZ(tmp8, tmp13) 
[     0] U1db1:  TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1da6
[   215] U1db2:  URET(0x01) !m0 
[   215] U1e46:  tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp8) 
[   216] U1e48:  tmp2:= CMOVCC_DSZ32_CONDNZ(tmp2, 0x00000008) 
[     0] U1e49:  tmp1:= ZEROEXT_DSZ8(tmp2, tmp1) 
[   216] U1e4a:  TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U31e9
[   219] U1e4c:  TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1e4e
[     0] U1e4d: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp3, U37dc, tmp2) !m1,m2 
[   219] U1e4e:  tmp4:= ZEROEXT_DSZ32(0x002c6000) 
[   219] U1e52:  tmp14:= OR_DSZ32(0x00016809, tmp14) 
[   220] U1e54:  tmp6:= CONCAT_DSZ16(tmp13, tmp6) 
[     0] U1e55:  tmp9:= OR_DSZ32(tmp9, tmp10) 
[   221] U1e50:  tmp4:= BTS_DSZ32(tmp4, 0x00000018) 
[     0] U1e51:  tmp14:= AND_DSZ32(tmp4, tmp14) 
[   221] U1e56:  tmp4:= MOVEFROMCREG_DSZ64( , 0x067) 
[   222] U1e58:  tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
[     0] U1e59: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp14, 0x000) 
[   231] U1e5a:  tmp3:= SUB_DSZN(tmp12, tmp4) !m1 SEQW GOTO U0dc1
[     0] U0dc1:  tmp4:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
[   232] U0dc2:  tmp4:= SUB_DSZN(tmp4, tmp3) !m1 
[   232] U0dc4:  tmp7:= ZEROEXT_DSZ32(0x00000025) 
caseD_dc5:
[     0] U0dc5: LFNCEMARK-> tmp8:= MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
[   232] U0dc8:  tmp15:= READUIP_REGOVR(0x01) !m0 
[     0] U0dc9:  tmp3:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
[   233] U0dc6:  SAVEUIP( , 0x01, U3e71) !m0 
[   239] U0dca: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U0dcc) SEQW GOTO U1db2
[   242] U3e74:  tmp14:= BT_DSZ32(tmp14, 0x00000013) 
[     0] U3e75:  tmp11:= READURAM( , 0x006e, 64) 
[     0] U3e71:  tmp3:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
[   243] U3e72:  tmp3:= ADD_DSZN(tmp3, tmp4) !m1 
[   244] U3e78:  tmp3:= CMOVCC_DSZ64_CONDB(tmp11, tmp3) 
[     0] U3e79:  tmp14:= BT_DSZ32(tmp14, 0x00000018) 
[   244] U3e7c:  tmp11:= MOVEMERGEFLGS_DSZ64(tmp11, tmp14) 
[     0] U3e7d:  tmp3:= CMOVCC_DSZ64_CONDB(tmp11, tmp3) 
[   245] U3e76:  tmp11:= MOVEMERGEFLGS_DSZ64(tmp11, tmp14) 
[   245] U3e7a:  tmp11:= READURAM( , 0x004a, 64) 
[   245] U3e80:  tmp11:= MOVEFROMCREG_DSZ64( , 0x065) 
[     0] U3e81:  tmp11:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp11) 
[   246] U3e7e:  tmp0:= SUB_DSZ32(0x00000003, tmp2) 
[   249] U3e82:  tmp3:= SUB_DSZN(tmp11, tmp3) !m1 
[   249] U3e84: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x71a) 
[     0] U3e85:  WRITEURAM(tmp3, 0x003f, 64) 
[   258] U3e88:  TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3e95
[     0] U3e89:  tmp1:= CONCAT_DSZ32(tmp13, tmp1) 
[     0] U3e95:  tmp0:= ZEROEXT_DSZ32(0x00000004) 
[   258] U3e96:  tmp0:= unk_204(tmp0, 0x00000003) 
[   259] U3e86:  MOVETOCREG_DSZ64(tmp7, 0x00b) 
[   259] U3e98:  MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 
[     0] U3e99:  tmp3:= READURAM( , 0x001f, 64) 
[   259] U3e9c:  WRITEURAM(tmp3, 0x001f, 32) 
[     0] U3e9d:  TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3ea0
[   260] U3e9a:  tmp3:= NOTAND_DSZ32(0x00000007, tmp3) 
[   260] U3ea0:  tmp1:= SHL_DSZ32(tmp2, tmp0) 
[     0] U3ea1:  tmp1:= ZEROEXT_DSZ16(tmp1) 
[   262] U3ea2:  tmp2:= SHL_DSZ32(tmp2, 0x00000003) 
[   263] U3ea6:  tmp11:= SHR_DSZ64(tmp0, 0x0000002d) 
[   263] U3eaa:  UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U07fe) 
[   264] U3ea4:  tmp2:= ZEROEXT_DSZ16(tmp2) 
[     0] U3ea5: SYNCWAIT-> tmp0:= unk_d61(tmp1) 
[   265] U3ea8:  tmp11:= AND_DSZ32(0x00000003, tmp11) 
[     0] U3ea9:  tmp11:= SUB_DSZ32(tmp8, tmp11) 
[   265] U3eac:  tmp13:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
[     0] U3ead:  tmp7:= SHR_DSZ64(tmp13, 0x0000002f) 
[   270] U3eae:  tmp13:= SHL_DSZ32(tmp13, 0x00000008) 
[   272] U3eb0:  tmp7:= AND_DSZ32(tmp7, tmp13) 
[     0] U3eb1:  tmp7:= AND_DSZ32(0x00000008, tmp7) 
[   277] U3eb2:  tmp13:= NOTAND_DSZ32(tmp7, 0x00034100) 
[   278] U3eb4:  tmp7:= NOTAND_DSZ32(tmp13, tmp10) 
[     0] U3eb5:  tmp14:= BTR_DSZ32(tmp14, 0x0000000e) 
[   279] U3eb6:  TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U64f0
[   281] U3eb8:  unk_e7b(tmp0, tmp1) !m1,m2 
[     0] U3eb9: LFNCEMARK-> tmp3:= unk_d61(tmp1) SEQW GOTO U64f5
[   286] U64f4: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
[     0] U64f5:  tmp8:= SHR_DSZ64(tmp0, 0x0000001f) 
[   286] U64fc:  tmp8:= AND_DSZ32(0x00000003, tmp6) 
[     0] U64fd:  tmp8:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000001) 
[   287] U64fe:  tmp12:= SHR_DSZ64(tmp0, 0x00000020) 
[   287] U6500:  TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U6505
[     0] U6501:  tmp11:= AND_DSZ32(0x00000007, tmp12) 
[   288] U6502:  tmp1:= SELECTCC_DSZ32_CONDZ(tmp11, 0x00000004) 
[   288] U6504:  tmp8:= OR_DSZ32(tmp1, tmp8) 
[     0] U6505: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp2, 0x7fe) SEQW GOTO U5b2a
[   289] U64f6:  tmp8:= NOTAND_DSZ32(tmp8, 0x00000200) 
[   289] U64f8:  tmp2:= NOTAND_DSZ32(tmp8, tmp7) 
[     0] U64f9:  tmp7:= NOTAND_DSZ32(0x0000003f, tmp14) 
[   290] U64fa:  tmp7:= OR_DSZ32(0x00000008, tmp7) 
[     0] U5b2d:  tmp13:= ZEROEXT_DSZ64(tmp0) 
[   300] U5b2e:  TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U654d
[   302] U5b30:  tmp8:= MOVETOCREG_DSZ64(tmp8, 0x6c5) 
[     0] U5b31:  tmp1:= ZEROEXT_DSZ32(0x00000803, tmp8) 
[   302] U6560:  tmp8:= SHL_DSZ64(tmp1, 0x00000018) 
[     0] U6561:  tmp8:= MOVETOCREG_OR_DSZ64(tmp8, 0x752, tmp1) 
[   304] U5b32:  tmp14:= SAVEUIP(0x01, U4dc9) !m0 SEQW GOTO U6560
[   306] U2c00:  AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
[     0] U2c01:  tmp14:= READUIP_REGOVR(0x01) !m0 
[   307] U6562: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp7, 0x000) 
[   308] U4dc8:  MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U05f6
[     0] U4dc9: LFNCEMARK-> tmp14:= unk_e6b(tmp0, tmp2) !m1,m2 
[   308] U6564:  MOVETOCREG_DSZ64(tmp8, 0x01b) !m2 SEQW GOTO U2c01
[     0] U6565:  tmp15:= RDSEGFLD(SS, FLGS) 
[   309] U2c02: LFNCEWAIT-> tmp0:= unk_d61(tmp2) 
[   311] U2c04:  tmp1:= unk_d61(tmp2) 
[     0] U2c05:  tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) SEQW URET1
[   311] U4dca:  tmp8:= ZEROEXT_DSZ32(0x00002000, tmp8) 
[   312] U3c00:  tmp3:= ZEROEXT_DSZ16(tmp13, tmp12) 
[     0] U3c01:  SAVEUIP( , 0x01, U068e) !m0 
[   312] U4dcc:  tmp8:= MOVETOCREG_DSZ64(tmp8, 0x7f5) 
[     0] U4dcd:  tmp15:= SHR_DSZ64(tmp0, 0x00000028) 
[   313] U4dce:  tmp14:= MOVEMERGEFLGS_DSZ32(0x00003aa5, tmp14) 
[   313] U4dd0:  tmp12:= ZEROEXT_DSZ16(tmp13, tmp12) 
[     0] U4dd1:  tmp3:= CONCAT_DSZ32(tmp3, tmp12) 
[   314] U3c0c: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, LIMIT) 
[     0] U3c0d:  MOVETOCREG_DSZ64(tmp1, 0x410) 
[   315] U3c04:  UFLOWCTRL(tmp8, tmp14, URET1) 
[     0] U3c05:  tmp7:= NOTAND_DSZ32(0x00000040, tmp7) 
[   315] U4dd2:  MOVETOCREG_DSZ64( , 0x00000000, 0x78e) SEQW GOTO U3c01
[   316] U3c02:  tmp14:= CMOVCC_DSZ32_CONDO(tmp14, 0x00002e42) 
[   316] U3c06:  tmp7:= OR_DSZ32(0x00000400, tmp7) 
[   316] U3c08:  TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U3c0c
[     0] U3c09: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, BASE) 
[   328] U3c0e:  tmp1:= ADD_DSZ32(0x00000001, tmp1) 
[     0] U068d:  NOP 
[   331] U068e:  URET(0x01) !m0 
[   331] U3c10: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x700) SEQW URET1
[     0] U3c11:  SAVEUIP_REGOVR(0x01, U3c12, 0x0008) !m0 SEQW GOTO U2b0d
[   338] U3aa4: LFNCEWTMRK-> unk_256() !m1 SEQW URET1
[     0] U3aa5:  BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U07fe) 
[   340] U3aa6:  TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2e61
[   343] U3ab0:  rsp:= AND_DSZN(0xfffffffffffffff0, rsp) !m1 
[     0] U3ab1:  tmp8:= RDSEGFLD(SS, SEL) SEQW GOTO U2e5c
[   344] U3aa8:  TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U3ab0
[     0] U3aa9:  tmp2:= RDSEGFLD(TSS, SEL) 
[     0] U1dd5:  TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2e61
[   346] U1dd6:  STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp9) !m0,m1 
[   346] U2e5c: LFNCEWAIT-> STADPPHYS_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff8, mode=0x0a,  , tmp8) 
[     0] U2e5d:  STADPPHYS_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff0, mode=0x0a,  , tmp5) 
[   347] U2e60:  TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U1dd6
[     0] U2e61: SYNCMARK-> tmp1:= RDSEGFLD(CS, SEL) 
[   348] U2e5e:  rsp:= SUB_DSZ64(0x00000010, rsp) 
[   350] U1dda:  STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_eb, mode=0x0a, tmp4) !m0,m1 
[     0] U1de1:  rsp:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
[   350] U1de2: LFNCEMARK-> unk_de3(tmp3) 
[   351] U1dd8:  tmp1:= RDSEGFLD(CS, SEL) 
[     0] U1dd9:  STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp1) !m0,m1 
[   352] U1de8: LFNCEMARK-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp1, 0x00000000) 
[     0] U1de9:  tmp1:= READURAM( , 0x0070, 64) 
[   353] U1ddc:  rsp:= SUB_DSZN(IMM_MACRO_1b, rsp) !m0,m1 
[     0] U1ddd:  TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1de2
[   355] U1de4: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U01ca) 
[     0] U1de5:  TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1de9
[   355] U1dea:  tmp1:= BTR_DSZ64(tmp1, 0x0000002e) 
[   355] U1dec: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp1, 0x00000020, 0x008) 
[     0] U1ded:  WRITEURAM(tmp1, 0x0170, 64) 
[   363] U1dee:  NOP 
[   363] U1df0: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
[     0] U1df1:  TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U2784
[   363] U1df4:  AETTRACE( , tmp0, 0x0c) SEQW GOTO U2784
[     0] U1df5:  TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1
[   363] U2784: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) !m1 
[     0] U2785:  tmp4:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
[   364] U1df2:  tmp0:= READURAM( , 0x003f, 64) 
[   371] U2786:  WRSEGFLD(tmp4, CS, SEL+FLGS+LIM) 
[   371] U2788:  tmp4:= RDSEGFLD(UNK_SEG_09, BASE) 
[     0] U2789:  WRSEGFLD(tmp4, CS, BASE) 
[   372] U278a:  tmp4:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
[   372] U278c:  WRSEGFLD(tmp4, SS, SEL+FLGS+LIM) 
[     0] U278d:  tmp4:= RDSEGFLD(SS_USERM, BASE) 
[   375] U278e:  WRSEGFLD(tmp4, SS, BASE) 
[   378] U2790:  rsp:= ZEROEXT_DSZ64N(rsp) !m1 
[     0] U2791: MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 
[   379] U2792:  tmp0:= PSELECT_CPL0( , 0x00000001) 
[   379] U2794:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U06e6) 
[     0] U2795: LFNCEWAIT-> NOP SEQW UEND3
[   387] U09b0:  tmp2:= unk_00f(0x00000008) 
[     0] U09b1:  tmp1:= unk_20c( , 0x00000001) 
[     0] U081d:  SAVEUIP( , 0x01, U6995) !m0 SEQW GOTO U1cfa
[   388] U081e: LFNCEMARK-> unk_25e( , tmp2) SEQW UEND0
[   390] U09b2:  tmp3:= unk_20d( , tmp1) 
[   390] U09b4:  CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000001, U2711) !m1 
[     0] U09b5:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2875) 
[   390] U09b6:  tmp2:= OR_DSZ32(0x00000010, tmp2) SEQW GOTO U081e
[   461] U07c8:  tmp4:= MOVE_DSZ32(IMM_MACRO_ALIAS_RIP) !m0 
[     0] U07c9: LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
[   461] U07cc:  tmp1:= ZEROEXT_DSZ32(0x00000301) SEQW GOTO U605d
[     0] U07cd:  rax:= ZEROEXT_DSZ32() 
[   462] U07ca:  tmp10:= READAFLAGS() !m2 
[   464] U408c:  NOP SEQW GOTO U3a2d
[     0] U408d:  NOP 
[     0] U4735:  tmp6:= SUB_DSZ32(0x00000008, tmp6) SEQW GOTO U4731
[   465] U4736:  tmp9:= ZEROEXT_DSZ8N(IMM_MACRO_1b) !m0,m1 
[   469] U4738: LFNCEWAIT-> tmp0:= READURAM( , 0x0070, 64) 
[     0] U4739:  tmp7:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6404
[   470] U6404:  TESTUSTATE( , VMX, !0x0002) !m0,m2 ? SEQW GOTO U6408
[     0] U6405: LFNCEWAIT-> tmp1:= MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000a, 0x2c4) !m0,m1 
[   478] U6406:  WRITEURAM(tmp1, 0x0070, 64) !m2 
[   481] U6408:  WRITEURAM(tmp0, 0x000a, 32) !m2 
[     0] U6409: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
[     0] U3d35: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000e, U60c9) !m0,m1 
ldat_read_arr6:
[   482] U3d36:  tmp7:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_13, mode=0x0a) !m0,m1 
[   483] U640c:  tmp10:= OR_DSZ32(tmp0, tmp10) 
[     0] U640d:  MOVETOCREG_DSZ64(0x00000016, 0x000) 
[   484] U640a:  MOVETOCREG_OR_DSZ64( , 0x00000002, 0x6c5) !m0 
[   487] U3d3c:  TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U3d40
[     0] U3d3d:  tmp5:= unk_20d(0x00000200) 
[   487] U3d40:  TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3d4e
[     0] U3d41:  tmp5:= unk_203(0x00257700, tmp5) 
[     0] U3d4d:  tmp7:= OR_DSZ32(tmp7, tmp0) 
[   488] U3d4e:  unk_13f(tmp7) !m2 
[   488] U640e:  TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3d35
[   489] U3d38:  tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 
[     0] U3d39: LFNCEMARK-> tmp3:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 
[   490] U3d54:  tmp13:= SAVEUIP(0x00, U33e5) 
[     0] U3d55:  TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U5fc4
[   490] U3d56: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp7, 0x00000011, 0x7fe) 
[   491] U3d50:  tmp7:= AND_DSZ32(tmp5, tmp7) 
[     0] U3d51:  tmp5:= NOTAND_DSZ32(tmp5, tmp10) 
[   494] U3d3a:  tmp5:= ZEROEXT_DSZ32N(0x003f7700) !m1 
patch_handle_0x10_mailboxes:
[   495] U3d52:  tmp7:= OR_DSZ32(tmp5, tmp7) 
[   503] U3d58:  tmp14:= SAVEUIP(0x01, U356e) !m0 SEQW GOTO U2c01
[     0] U3d59:  tmp9:= ZEROEXT_DSZ32(0x0000010a) 
[     0] U356d: MSLOOP-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0465) SEQW GOTO U3568
[   506] U356e: LFNCEMARK-> tmp1:= unk_e6b(tmp0, tmp2) !m1,m2 
[   506] U3570: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp1, tmp1) 
[     0] U3571:  TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U0095
[   511] U3574:  tmp6:= MOVETOCREG_DSZ64(0x00000017, 0x000) !m2 SEQW GOTO U3e56
[     0] U3575:  rsp:= ZEROEXT_DSZ8N(rsp, tmp5) !m1 
[   512] U3572:  tmp11:= MOVEFROMCREG_DSZ64( , 0x79e) 
[     0] U3e55:  TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U3574
[   512] U3e56:  tmp5:= MOVE_DSZ64(rsp, rsp) !m1 
[   515] U3e58:  rsp:= ADD_DSZN(tmp9, rsp) !m1 
[     0] U3e59:  tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 
[   516] U3e5a: LFNCEMARK-> rsp:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 
[   518] U3e5c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp11, 0x79e) !m2 
[     0] U3e5d:  tmp14:= SAVEUIP(0x01, U3bc6) !m0 SEQW GOTO U2c01
[     0] U3bc5:  MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001f, 0x29d) !m0,m1 SEQW GOTO U2ba1
[   536] U3bc6: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, FLGS) 
[   542] U3bc8: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x7f5) !m2 
[     0] U3bc9:  TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U33e6
[     0] U33e5:  SAVEUIP( , 0x01, U2782) !m0 SEQW GOTO U19d9
[   545] U33e6:  MOVETOCREG_DSZ64(tmp6, 0x000) !m2 
[   545] U3bca:  tmp14:= SAVEUIP(0x01, U33e6) !m0 
[   545] U3bcc:  tmp11:= RDSEGFLD(CS, FLGS) 
[     0] U3bcd:  tmp11:= XOR_DSZ32(tmp1, tmp11) 
[   548] U3bd0:  UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, tmp14) SEQW URET1
[     0] U3bd1:  TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U0092
[   549] U3bce:  tmp11:= AND_DSZ32(0x00002000, tmp11) 
[   557] U33e8:  tmp14:= SAVEUIP(0x01, U3006) !m0 
[     0] U33e9:  TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U1959
[   562] U33ea: LFNCEWTMRK-> unk_e7b(tmp0, tmp2) !m1,m2 
[   566] U33ec: LFNCEWAIT-> tmp1:= RDSEGFLD(SS_USERM, FLGS) SEQW GOTO U195c
[     0] U33ed:  tmp2:= READURAM( , 0x005c, 64) 
[   574] U195c:  LEA_DSZ8_ASZ32_SC1(tmp3) 
[     0] U195d:  MOVETOCREG_DSZ64(tmp1, 0x73c) !m2 
[   581] U19d8:  TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U33e5
[     0] U19d9: LFNCEWAIT-> tmp11:= RDSEGFLD(UNK_SEG_09, LIMIT) 
[     0] U3005:  tmp5:= ZEROEXT_DSZ32N(tmp5) !m1 SEQW GOTO U189a
[   581] U3006:  rsp:= ZEROEXT_DSZ8N(rsp, tmp5) !m1 SEQW URET0
[   585] U195e:  tmp11:= RDSEGFLD(SS, FLGS) 
[   586] U19da:  MOVETOCREG_DSZ64(tmp11, 0x410) 
[   586] U19dc:  tmp11:= ADD_DSZ32(0x00000001, tmp11) 
[     0] U19dd:  MOVETOCREG_DSZ64(tmp11, 0x700) 
[   587] U1960:  tmp11:= XOR_DSZ32(tmp11, tmp1) 
[     0] U1961:  tmp11:= AND_DSZ32(0x00004000, tmp11) SEQW GOTO U3bd0
[   587] U19de:  tmp11:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
[   588] U19e0: LFNCEMARK-> MOVETOCREG_DSZ64(tmp11, 0x78e) SEQW URET1
[     0] U19e1:  tmp5:= ZEROEXT_DSZ32(0x000019e4) 
[     0] U2781:  unk_d68(tmp15,  , tmp0) !m2 SEQW GOTO U2db0
[   589] U2782: LFNCEMARK-> LBSYNC(0x00000002) 
