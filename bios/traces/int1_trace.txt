[   149] U0c40:  tmp3:= ZEROEXT_DSZ32(0x00000005) 
[     0] U0c41: LFNCEMARK-> tmp4:= MOVE_DSZ64(IMM_MACRO_ALIAS_RIP) !m0,m1 
[   150] U0c44:  tmp2:= ZEROEXT_DSZ32(0x00000001) 
[     0] U0c45:  tmp6:= ZEROEXT_DSZ16(0x00000404) 
[   151] U0c42:  TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U2f19
[   153] U0c46: LFNCEWAIT-> SAVEUIP( , 0x00, U0816) 
[   163] U0c48:  tmp7:= MOVEFROMCREG_DSZ64( , 0x01c) 
[     0] U0c49:  tmp7:= NOTAND_DSZ64(0x00004000, tmp7) 
[   165] U6678:  tmp13:= MOVEFROMCREG_DSZ64( , 0x7f8) 
[     0] U6679:  tmp5:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
[   166] U0c4a:  MOVETOCREG_DSZ64( , 0x00000000, 0x086) SEQW GOTO U6678
[   174] U667a:  tmp13:= NOTAND_DSZ32(0x00002000, tmp13) 
[   174] U667c:  tmp12:= READURAM( , 0x003d, 64) 
[     0] U667d:  tmp12:= NOTAND_DSZ32(0x0000000f, tmp12) 
[   175] U667e:  tmp12:= OR_DSZ32(tmp7, tmp12) 
[   175] U6680:  TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6684
[     0] U6681:  tmp8:= READURAM( , 0x0014, 64) 
[   175] U6684:  tmp5:= NOTAND_DSZ32(0x00000003, tmp5) 
[     0] U6685:  MOVETOCREG_DSZ64(tmp13, 0x7f8) !m2 
[   183] U6686:  MOVETOCREG_DSZ64(tmp5, 0x7f9, 32) !m1,m2 
[   188] U6688: LFNCEMARK-> WRITEURAM(tmp12, 0x003d, 64) !m2 
[     0] U6689:  tmp11:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
[   195] U668a:  tmp8:= SUB_DSZ32(0x00000005, tmp3) 
[   195] U668c:  tmp8:= MOVEMERGEFLGS_DSZ32(0x00000036, tmp8) 
[     0] U668d:  tmp8:= CMOVCC_DSZ32_CONDZ(tmp8, 0x00000000) 
[   196] U668e:  BTUJB_DIRECT_NOTTAKEN(tmp11, U2aa5, tmp8) !m1 
[   196] U6690: SYNCFULL-> tmp0:= unk_203( , 0x00000001) SEQW URET0
[     0] U6691:  TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U6696
[     0] U0815:  rax:= unk_0bc(tmp0, rax) SEQW UEND0
[   222] U0816: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U60ad) SEQW GOTO U59c4
[   223] U59c4:  tmp8:= SAVEUIP( , 0x00, U31e9) 
[     0] U59c5: ROVR<- tmp1:= CONCAT_DSZ8(tmp3, tmp2) SEQW SAVEUIP1 U59c6SEQW GOTO U2178
FUN_ucode_0002178:
[   226] U2178: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
[     0] U2179:  tmpv0:= READAFLAGS( , tmpv0) !m2 SEQW URET1
[   228] U59c6:  tmp7:= ZEROEXT_DSZ32(0x00000025) 
[   229] U59c8:  TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW URET0
[     0] U59c9:  tmp14:= MOVETOCREG_DSZ64(0x00000009, 0x000) 
[   233] U59ca:  tmp9:= ZEROEXT_DSZ32(tmp10) 
[   234] U59cc:  TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U59d1
[     0] U59cd:  tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
[   234] U59d0:  BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U6a38) !m1 
[     0] U59d1: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 SEQW GOTO U3e71
[     0] U3e71:  tmp3:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
[   236] U3e72:  tmp3:= ADD_DSZN(tmp3, tmp4) !m1 
[   236] U3e74:  tmp14:= BT_DSZ32(tmp14, 0x00000013) 
[     0] U3e75:  tmp11:= READURAM( , 0x006e, 64) 
[   238] U3e76:  tmp11:= MOVEMERGEFLGS_DSZ64(tmp11, tmp14) 
[   238] U3e7c:  tmp11:= MOVEMERGEFLGS_DSZ64(tmp11, tmp14) 
[     0] U3e7d:  tmp3:= CMOVCC_DSZ64_CONDB(tmp11, tmp3) 
[   239] U3e78:  tmp3:= CMOVCC_DSZ64_CONDB(tmp11, tmp3) 
[     0] U3e79:  tmp14:= BT_DSZ32(tmp14, 0x00000018) 
[   239] U3e7e:  tmp0:= SUB_DSZ32(0x00000003, tmp2) 
[   239] U3e80:  tmp11:= MOVEFROMCREG_DSZ64( , 0x065) 
[     0] U3e81:  tmp11:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp11) 
[   240] U3e7a:  tmp11:= READURAM( , 0x004a, 64) 
[   241] U3e82:  tmp3:= SUB_DSZN(tmp11, tmp3) !m1 
[   244] U3e84: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x71a) 
[     0] U3e85:  WRITEURAM(tmp3, 0x003f, 64) 
[   254] U3e86:  MOVETOCREG_DSZ64(tmp7, 0x00b) 
[   254] U3e88:  TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3e95
[     0] U3e89:  tmp1:= CONCAT_DSZ32(tmp13, tmp1) 
[   254] U3e98:  MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 
[     0] U3e99:  tmp3:= READURAM( , 0x001f, 64) 
[     0] U3e95:  tmp0:= ZEROEXT_DSZ32(0x00000004) 
[   255] U3e96:  tmp0:= unk_204(tmp0, 0x00000003) 
[   256] U3e9c:  WRITEURAM(tmp3, 0x001f, 32) 
[     0] U3e9d:  TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3ea0
[   256] U3ea2:  tmp2:= SHL_DSZ32(tmp2, 0x00000003) 
[   257] U3e9a:  tmp3:= NOTAND_DSZ32(0x00000007, tmp3) 
[   257] U3ea0:  tmp1:= SHL_DSZ32(tmp2, tmp0) 
[     0] U3ea1:  tmp1:= ZEROEXT_DSZ16(tmp1) 
[   257] U3ea4:  tmp2:= ZEROEXT_DSZ16(tmp2) 
[     0] U3ea5: SYNCWAIT-> tmp0:= unk_d61(tmp1) 
[   258] U3ea6:  tmp11:= SHR_DSZ64(tmp0, 0x0000002d) 
[   259] U3ea8:  tmp11:= AND_DSZ32(0x00000003, tmp11) 
[     0] U3ea9:  tmp11:= SUB_DSZ32(tmp8, tmp11) 
[   260] U3eaa:  UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U07fe) 
[   262] U3eac:  tmp13:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
[     0] U3ead:  tmp7:= SHR_DSZ64(tmp13, 0x0000002f) 
[   266] U3eae:  tmp13:= SHL_DSZ32(tmp13, 0x00000008) 
[   267] U3eb0:  tmp7:= AND_DSZ32(tmp7, tmp13) 
[     0] U3eb1:  tmp7:= AND_DSZ32(0x00000008, tmp7) 
[   268] U3eb2:  tmp13:= NOTAND_DSZ32(tmp7, 0x00034100) 
[   273] U3eb4:  tmp7:= NOTAND_DSZ32(tmp13, tmp10) 
[     0] U3eb5:  tmp14:= BTR_DSZ32(tmp14, 0x0000000e) 
[   274] U3eb6:  TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U64f0
[   275] U3eb8:  unk_e7b(tmp0, tmp1) !m1,m2 
[     0] U3eb9: LFNCEMARK-> tmp3:= unk_d61(tmp1) SEQW GOTO U64f5
[   280] U64fa:  tmp7:= OR_DSZ32(0x00000008, tmp7) 
[   280] U64fc:  tmp8:= AND_DSZ32(0x00000003, tmp6) 
[     0] U64fd:  tmp8:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000001) 
[   282] U64f4: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
[     0] U64f5:  tmp8:= SHR_DSZ64(tmp0, 0x0000001f) 
[   282] U64fe:  tmp12:= SHR_DSZ64(tmp0, 0x00000020) 
[   282] U6500:  TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U6505
[     0] U6501:  tmp11:= AND_DSZ32(0x00000007, tmp12) 
[   282] U6504:  tmp8:= OR_DSZ32(tmp1, tmp8) 
[     0] U6505: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp2, 0x7fe) SEQW GOTO U5b2a
[   283] U6502:  tmp1:= SELECTCC_DSZ32_CONDZ(tmp11, 0x00000004) 
[   284] U64f6:  tmp8:= NOTAND_DSZ32(tmp8, 0x00000200) 
[   284] U64f8:  tmp2:= NOTAND_DSZ32(tmp8, tmp7) 
[     0] U64f9:  tmp7:= NOTAND_DSZ32(0x0000003f, tmp14) 
[     0] U5b2d:  tmp13:= ZEROEXT_DSZ64(tmp0) 
[   296] U5b2e:  TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U654d
[   297] U5b30:  tmp8:= MOVETOCREG_DSZ64(tmp8, 0x6c5) 
[     0] U5b31:  tmp1:= ZEROEXT_DSZ32(0x00000803, tmp8) 
[   297] U6560:  tmp8:= SHL_DSZ64(tmp1, 0x00000018) 
[     0] U6561:  tmp8:= MOVETOCREG_OR_DSZ64(tmp8, 0x752, tmp1) 
[   299] U5b32:  tmp14:= SAVEUIP(0x01, U4dc9) !m0 SEQW GOTO U6560
[   299] U6562: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp7, 0x000) 
[   301] U2c00:  AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
[     0] U2c01:  tmp14:= READUIP_REGOVR(0x01) !m0 
[   303] U4dc8:  MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U05f6
[     0] U4dc9: LFNCEMARK-> tmp14:= unk_e6b(tmp0, tmp2) !m1,m2 
[   304] U2c02: LFNCEWAIT-> tmp0:= unk_d61(tmp2) 
[   304] U6564:  MOVETOCREG_DSZ64(tmp8, 0x01b) !m2 SEQW GOTO U2c01
[     0] U6565:  tmp15:= RDSEGFLD(SS, FLGS) 
[   306] U2c04:  tmp1:= unk_d61(tmp2) 
[     0] U2c05:  tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) SEQW URET1
[   307] U3c00:  tmp3:= ZEROEXT_DSZ16(tmp13, tmp12) 
[     0] U3c01:  SAVEUIP( , 0x01, U068e) !m0 
[   307] U4dca:  tmp8:= ZEROEXT_DSZ32(0x00002000, tmp8) 
[   307] U4dcc:  tmp8:= MOVETOCREG_DSZ64(tmp8, 0x7f5) 
[     0] U4dcd:  tmp15:= SHR_DSZ64(tmp0, 0x00000028) 
[   308] U4dce:  tmp14:= MOVEMERGEFLGS_DSZ32(0x00003aa5, tmp14) 
[   308] U4dd0:  tmp12:= ZEROEXT_DSZ16(tmp13, tmp12) 
[     0] U4dd1:  tmp3:= CONCAT_DSZ32(tmp3, tmp12) 
[   310] U3c04:  UFLOWCTRL(tmp8, tmp14, URET1) 
[     0] U3c05:  tmp7:= NOTAND_DSZ32(0x00000040, tmp7) 
[   310] U3c0c: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, LIMIT) 
[     0] U3c0d:  MOVETOCREG_DSZ64(tmp1, 0x410) 
[   311] U3c02:  tmp14:= CMOVCC_DSZ32_CONDO(tmp14, 0x00002e42) 
[   311] U3c06:  tmp7:= OR_DSZ32(0x00000400, tmp7) 
[   311] U3c08:  TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U3c0c
[     0] U3c09: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, BASE) 
[   311] U4dd2:  MOVETOCREG_DSZ64( , 0x00000000, 0x78e) SEQW GOTO U3c01
[   322] U3c0e:  tmp1:= ADD_DSZ32(0x00000001, tmp1) 
[   325] U3c10: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x700) SEQW URET1
[     0] U3c11:  SAVEUIP_REGOVR(0x01, U3c12, 0x0008) !m0 SEQW GOTO U2b0d
[     0] U068d:  NOP 
[   326] U068e:  URET(0x01) !m0 
[   334] U3aa4: LFNCEWTMRK-> unk_256() !m1 SEQW URET1
[     0] U3aa5:  BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U07fe) 
[   336] U3aa6:  TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2e61
[   338] U3aa8:  TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U3ab0
[     0] U3aa9:  tmp2:= RDSEGFLD(TSS, SEL) 
[   339] U3ab0:  rsp:= AND_DSZN(0xfffffffffffffff0, rsp) !m1 
[     0] U3ab1:  tmp8:= RDSEGFLD(SS, SEL) SEQW GOTO U2e5c
[   340] U2e5c: LFNCEWAIT-> STADPPHYS_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff8, mode=0x0a,  , tmp8) 
[     0] U2e5d:  STADPPHYS_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff0, mode=0x0a,  , tmp5) 
[     0] U1dd5:  TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2e61
[   341] U1dd6:  STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp9) !m0,m1 
[   343] U2e5e:  rsp:= SUB_DSZ64(0x00000010, rsp) 
[   343] U2e60:  TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U1dd6
[     0] U2e61: SYNCMARK-> tmp1:= RDSEGFLD(CS, SEL) 
[   344] U1dda:  STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_eb, mode=0x0a, tmp4) !m0,m1 
[     0] U1de1:  rsp:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
[   345] U1de2: LFNCEMARK-> unk_de3(tmp3) 
[   346] U1dd8:  tmp1:= RDSEGFLD(CS, SEL) 
[     0] U1dd9:  STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp1) !m0,m1 
[   347] U1de8: LFNCEMARK-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp1, 0x00000000) 
[     0] U1de9:  tmp1:= READURAM( , 0x0070, 64) 
[   348] U1ddc:  rsp:= SUB_DSZN(IMM_MACRO_1b, rsp) !m0,m1 
[     0] U1ddd:  TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1de2
[   349] U1de4: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U01ca) 
[     0] U1de5:  TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1de9
[   349] U1dea:  tmp1:= BTR_DSZ64(tmp1, 0x0000002e) 
[   350] U1dec: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp1, 0x00000020, 0x008) 
[     0] U1ded:  WRITEURAM(tmp1, 0x0170, 64) 
[   357] U1df0: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
[     0] U1df1:  TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U2784
[   357] U1df4:  AETTRACE( , tmp0, 0x0c) SEQW GOTO U2784
[     0] U1df5:  TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1
[   357] U2784: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) !m1 
[     0] U2785:  tmp4:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
[   358] U1dee:  NOP 
[   359] U1df2:  tmp0:= READURAM( , 0x003f, 64) 
[   366] U2786:  WRSEGFLD(tmp4, CS, SEL+FLGS+LIM) 
[   366] U2788:  tmp4:= RDSEGFLD(UNK_SEG_09, BASE) 
[     0] U2789:  WRSEGFLD(tmp4, CS, BASE) 
[   366] U278a:  tmp4:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
[   366] U278c:  WRSEGFLD(tmp4, SS, SEL+FLGS+LIM) 
[     0] U278d:  tmp4:= RDSEGFLD(SS_USERM, BASE) 
[   371] U278e:  WRSEGFLD(tmp4, SS, BASE) 
[   371] U2794:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U06e6) 
[     0] U2795: LFNCEWAIT-> NOP SEQW UEND3
[   373] U2790:  rsp:= ZEROEXT_DSZ64N(rsp) !m1 
[     0] U2791: MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 
[   382] U09b0:  tmp2:= unk_00f(0x00000008) 
[     0] U09b1:  tmp1:= unk_20c( , 0x00000001) 
[     0] U081d:  SAVEUIP( , 0x01, U6995) !m0 SEQW GOTO U1cfa
[   383] U081e: LFNCEMARK-> unk_25e( , tmp2) SEQW UEND0
[   384] U09b4:  CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000001, U2711) !m1 
[     0] U09b5:  UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2875) 
[   385] U09b2:  tmp3:= unk_20d( , tmp1) 
[   385] U09b6:  tmp2:= OR_DSZ32(0x00000010, tmp2) SEQW GOTO U081e
